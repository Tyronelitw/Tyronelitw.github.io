{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1542373427081},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1542373427079},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1542373426936},{"_id":"themes/landscape/_config.yml","hash":"ce9d2939245209b8f5c5bbbdadc917d86057d032","modified":1542373427113},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1542373427076},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1542373427111},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1542373427107},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1542373427089},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1542373427097},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1542373427102},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1542373427086},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1542373427084},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1542373427091},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1542373427094},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1542373427105},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1542373427100},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1542373427109},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1542373426919},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1542373426868},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1542373426909},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542373426870},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1542373426914},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1542373426917},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1542373426933},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1542373426911},{"_id":"source/_posts/test.md","hash":"3434331595772242c1912bd59befa7db617f553c","modified":1542375028977},{"_id":"source/categories/index.md","hash":"a877f3468956d14f91cdbaf674571ffd2b693e00","modified":1542373419581},{"_id":"source/tags/index.md","hash":"a60f5a450c894591f5cee73683421b2d9161f018","modified":1542373419585},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1542373426891},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1542373426898},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1542373426873},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1542373426902},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1542373426907},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1542373426874},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1542373426904},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a36cec48782782bac92622f369c750e5c7396510","modified":1542373426894},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1542373426871},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1542373426896},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1542373426930},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1542373426900},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1542373426922},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1542373426924},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1542373426926},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1542373426928},{"_id":"source/_posts/bak/My-New-Post.md","hash":"1ca712b5fc43c4eab203be548c03260f6ac266ee","modified":1542373419569},{"_id":"source/_posts/bak/RPMbuild打包流程.md","hash":"ec174e2645cbaf8a0cbb8f00e963864e41837160","modified":1542373419566},{"_id":"source/_posts/bak/hello-world.md","hash":"aa26362ce941547defe719d0e7f67743ee8072d4","modified":1542373419567},{"_id":"source/_posts/bak/ansible安装和基本使用.md","hash":"31a3256739d0c0450f0c861723ade0cbb3ac018e","modified":1542373419574},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1542373427048},{"_id":"source/_posts/bak/hexo给文章添加分类和标签.md","hash":"caadc1f9937ec0dbc47214cdc52d38b280d29dc4","modified":1542373419571},{"_id":"source/_posts/bak/test-1.md","hash":"cbbd17157862339b94efbb4b5bec42cd66becf82","modified":1542373831266},{"_id":"source/_posts/bak/处世话方圆.md","hash":"af754bdb4e9de15b345a4514df4f5c411269fa0a","modified":1542373419578},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1542373427045},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1542373427042},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1542373426980},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1542373426986},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1542373426975},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1542373426947},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1542373426953},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1542373426983},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1542373426978},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1542373426951},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1542373426944},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1542373426939},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1542373426877},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1542373426887},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1542373426885},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1542373426880},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1542373426882},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1542373426889},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1542373427067},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1542373427069},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1542373427060},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1542373427053},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1542373427055},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1542373427072},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1542373427057},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1542373427064},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1542373427062},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1542373427051},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1542373427006},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1542373427015},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1542373427011},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1542373427037},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1542373427040},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1542373426968},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1542373426971},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1542373426959},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1542373426963},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1542373426965},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1542373426956},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1542373427034},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1542373427028},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1542373427000}],"Category":[{"name":"test","_id":"cjok2nmpd0002f0u7vp99x96y"},{"name":"技术","_id":"cjok2nmqd000df0u745ea6gdr"},{"name":"教程","_id":"cjok2nmql000qf0u79k90zt08"}],"Data":[],"Page":[{"title":"文章分类","date":"2018-04-02T06:51:08.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2018-04-02 14:51:08\ntype: \"categories\"\n---\n","updated":"2018-11-16T13:03:39.581Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjok2nmpa0001f0u7wgzye9w1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2018-04-02T06:58:08.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-04-02 14:58:08\ntype: \"tags\"\n---\n","updated":"2018-11-16T13:03:39.585Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjok2nmq80008f0u7pmi6uhaw","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"test","date":"2018-11-16T08:31:29.000Z","_content":"test \nqaq\n阿西吧\n","source":"_posts/test.md","raw":"---\ntitle: test\ndate: 2018-11-16 16:31:29\ncategories:\n- test\ntags:\n- 测试\n- 文档\n---\ntest \nqaq\n阿西吧\n","slug":"test","published":1,"updated":"2018-11-16T13:30:28.977Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmp70000f0u7no4jyuvy","content":"<p>test<br>qaq<br>阿西吧</p>\n","site":{"data":{}},"excerpt":"","more":"<p>test<br>qaq<br>阿西吧</p>\n"},{"title":"My New Post","date":"2018-03-30T07:03:27.000Z","_content":"##Hello,everyone! My Name is Tyrone. This is My Blog. Welcome to here.\n##你好啊！欢迎来到我的个人博客，在这里你就会浏览到很多IT技术相关的文章，当然了，平时也会记录一些日常，写写心情感悟，欢迎吐槽哦。\n\n###test-test-test。\n\n\n##No.1 Create a new post\n\n```bash\n# hexo new \"test\"\n```\n\n\n","source":"_posts/bak/My-New-Post.md","raw":"---\ntitle: My New Post\ndate: 2018-03-30 15:03:27\ncategories: \n- test\ntags:\n- 测试\n---\n##Hello,everyone! My Name is Tyrone. This is My Blog. Welcome to here.\n##你好啊！欢迎来到我的个人博客，在这里你就会浏览到很多IT技术相关的文章，当然了，平时也会记录一些日常，写写心情感悟，欢迎吐槽哦。\n\n###test-test-test。\n\n\n##No.1 Create a new post\n\n```bash\n# hexo new \"test\"\n```\n\n\n","slug":"bak/My-New-Post","published":1,"updated":"2018-11-16T13:03:39.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmq90009f0u7hxy6d0ia","content":"<p>##Hello,everyone! My Name is Tyrone. This is My Blog. Welcome to here.</p>\n<p>##你好啊！欢迎来到我的个人博客，在这里你就会浏览到很多IT技术相关的文章，当然了，平时也会记录一些日常，写写心情感悟，欢迎吐槽哦。</p>\n<p>###test-test-test。</p>\n<p>##No.1 Create a new post</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo new \"test\"</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>##Hello,everyone! My Name is Tyrone. This is My Blog. Welcome to here.</p>\n<p>##你好啊！欢迎来到我的个人博客，在这里你就会浏览到很多IT技术相关的文章，当然了，平时也会记录一些日常，写写心情感悟，欢迎吐槽哦。</p>\n<p>###test-test-test。</p>\n<p>##No.1 Create a new post</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># hexo new \"test\"</span></span><br></pre></td></tr></table></figure>\n"},{"title":"RPMbuild打包流程","date":"2018-04-17T10:02:57.000Z","_content":"## RPMbuild编译流程\n这是一个编写 RPM 文件的简明教程, 展示了如何快速创建一个简单的源代码包和二进制软件包。关于如何创建 RPM 文件的完整信息（包括更详细的技巧），请参考 [How to create an RPM package](https://fedoraproject.org/wiki/How_to_create_an_RPM_package)。\n##基础知识\n#1.RPM(RedHat Package Manager)是RedHat的软件包管理器。通过rpm可以在软件安装的过程中就把相关的依赖一起部署完毕，此外，rpm还有数据库协助软件升级、文件校验等；结合yum升级方式，选择rpm打包是很好的一种方法。\n#2.若要构建一个标准的 RPM 包，您需要创建 .spec 文件，其中包含软件打包的全部信息。然后，对此文件执行 rpmbuild 命令，经过这一步，系统会按照步骤生成最终的 RPM 包。一般情况，您应该把源代码包，比如由开发者发布的以 .tar.gz 结尾的文件，放入 ~/rpmbuild/SOURCES 目录。将.spec 文件放入 ~/rpmbuild/SPECS 目录，并命名为 \"软件包名.spec\" 。\n## 环境构建\n#1.创建一个打包专用的普通用户，避免使用root用户打包发生错误破坏系统：\n```bash\nuseradd makerpmgroupadd mockusermod -a -G mock makerpmpasswd makerpm\n```\n#2.安装打包需要用到的开发工具：\n```bash\nyum install  rpmdevtools \n```\n#3.切换到打包专用账号下，执行以下命令：\n```bash\nsu - makerpmrpmdev-setuptree\n```\n将会创建 ~/rpmbuild 目录作为 RPM 编译目录。此目录包含若干子目录，用于保存项目源码、RPM 配置文件以及最终的源码和二进制包。其中，SOURCES目录中存放的是源文件的压缩包（一般是tar.gz格式）以及其所需要的配置文件和patch等。BUILD目录存放build阶段解压的源文件压缩包。SPECS目录存放的是spec文件，打包的核心就是对该spec文件的编写。之后通过对该spec文件执行rpmbuild操作进行打包，最终生成的二进制RPM包存放于RPMS，源文件RPM包存放于SRAMS。同时在install阶段，为保证非root用户能打包，引入了BuildRoot，整个安装过程会在该目录发生。再根据spec文件中的%files指定打包需要哪些文件（从BUILDROOT的相应路径找到文件）。\n## 编译过程\n#1.我们打包所需的项目源码通常称为 'upstream' 源。我们将从项目网站上，将源码下载到 ~/rpmbuild/SOURCE 目录中。我们获得了一个 tarball 压缩文件, 这正是大多数 FOSS 项目首选发布形式。如果是内部代码托管环境，从内部代码服务器clone代码，然后使用python生成tarball压缩文件。我们平时的编译过程中通常使用一下两种方法：\n```bash\ncd ~/rpmbuild/SOURCES/\n```\n1.1\n```bash\nwget https://files.pythonhosted.org/packages/a1/0d/a1b490503545b3b4600b965eae5d44cc2b6ce27cfb44f4debc563dbb56d3/textfsm-0.4.1.tar.gz\n```\n1.2\n```bash\ngit clone git://git.openstack.org/openstack/nova\ncd nova\ngit checkout 16.1.0\npython setup.py sdist\n```\n#2.生成spec文件：spec文件可以使用vim或者rpmdev工具生成模板文件，也可以使用src格式rpm获取spec文件。\n#2.1\n```bash\nrpmdev-newspec textfsm\n```\n或者直接使用vim test.spec\n#2.2\n```bash\nwget http://vault.centos.org/centos/7/cloud/Source/openstack-pike/openstack-nova-16.1.0-1.el7.src.rpm\n```\n#2.2.1有了源码包，可以执行以下命令安装至 ~/rpmbuild 目录：\n```bash\nrpm -ivh 源码包名*.src.rpm\n```\n#2.2.2使用rpm2cpio解压源码包：\n```bash\nrpm2cpio openstack-nova-16.1.0-1.el7.src.rpm |cpio -div\n```\n#3.spec文件深入解析：\nName:\t\t\t\t\t\t#  软件包名，应与 SPEC 文件名一致。可通过宏{%name}来引用\nVersion:\t\t\t\t\t# 上游版本号 \nRelease: 1%{?dist}\t\t\t\t# rpm包的发行编号\nSummary:\t\t\t\t\t#  一行简短的软件包介绍。请使用美式英语。请勿在结尾添加标点！\nGroup:\t\t\t\t\t\t# 软件包组\nLicense:\t\t\t\t\t# 授权协议\nURL:\t\t\t\t\t\t# 软件包的项目主页\nSource0:\t\t\t\t\t# 软件源码包的URL地址\nBuildRoot:%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)\n\t\t\t\t\t\t# 在 %install 阶段（%build 阶段后）文件需要安装至此位置。\nBuildRequires:\t\t\t\t\t# build过程需要安装的依赖\nRequires:\t\t\t\t\t# 编译生成的rpm安装所需要的依赖\n%description\t\t\t\t\t#  程序的详细/多行描述，请使用美式英语。每行必须小于等于 80 个字符。\n%prep\t\t\t\t\t\t#  打包准备阶段执行一些命令（如，解压源码包，打补丁等），以便开始编译。\n%setup -q -n %{name}-%{version} \t\t# 解压源码包到BUILD目录下\n%build\t\t\t\t\t\t#  包含构建阶段执行的命令，构建完成后便开始后续安装。\n%configure\nmake\n%{?_smp_mflags}\n%install\t\t\t\t\t#  包含安装阶段执行的命令。\nrm -rf %{buildroot}\nmake install DESTDIR=%{buildroot}\n%clean\t\t\t\t\t\t#  清理安装目录的命令。\nrm -rf %{buildroot}\n%files\t\t\t\t\t\t#  需要被打包/安装的文件列表。\n%defattr(-,root,root,-)\n%doc\n%changelog\t\t\t\t\t#  RPM 包变更日志。请使用示例中的格式。注意，不是软件本身的变更日志。\nspec文件详细介绍请参照：[spec文件详细介绍] (https://docs.fedoraproject.org/quick-docs/en-US/creating-rpm-packages.html#con_rpm-spec-file-overview)。\n#4.在编写spec文件时，使用到很多RPM宏命令，这些宏命令的定义可在/usr/lib/rpm/macros中查看，也可以通过以下命令查看： rpm --showrc有关宏命令的完整列表请参考：[Macros]（http://fedoraproject.org/wiki/Packaging:Guidelines#Macros）\n5.编译rpm包：\n```bash\nrpmbuild  -ba NAME.spec\n```\nrpmbuild命令可选参数：\n-bp         #只执行spec的%pre 段(解开源码包并打补丁，即只做准备)\n-bc         #执行spec的%pre和%build 段(准备并编译)\n-bi         #执行spec中%pre，%build与%install(准备，编译并安装)\n-bl         #检查spec中的%file段(查看文件是否齐全)\n-ba         #建立源码与二进制包(常用)\n-bb         #只建立二进制包(常用)\n-bs         #只建立源码包\n## 搭建yum源 \n#1.管理yum源需要一个工具createrepo，使用yum安装：\n```bash\nyum -y install createrepo\n```\n#2.创建yum仓库目录：\n```bash\nmkdir -p /date/repo/yum/ctyun/centos/{6,7}/cloud/x86_64/openstack-pike/\n```\n#3.生成repodate信息：\n```bash\ncd  /date/repo/yum/ctyun/centos/7/cloud/x86_64/openstack-pike/createrepo -pdo   .    .\n```\n#4.使用nignx对外提供web服务：\n```bash\nyum install -y nginx\nvim /etc/nginx/nginx.conf\nhttp {\n……\nautoindex on; \nautoindex_exact_size on;\nautoindex_localtime on;\n……\nserver {\n……\nroot         /date/repo/yum/;\n……\n\t}\n}\n```\n#5.重启Nginx服务，配置yum源配置文件：\n```bash\nvim /etc/yum.repos.d/local.repo\n[cloud]\nname=CentOS-$releasever - Cloud\nbaseurl=http://localhost_ip/ctyun/centos/$releasever/cloud/$basearch/openstack-pike/\ngpgcheck=0\nenabled=1\n```\n#6.每次将打好的rpm包拷到yum目录后需要重新更新yum索引文件:\n```bash\ncd /date/repo/yum/ctyun/centos/7/cloud/x86_64/openstack-pike/\ncreaterepo --update . \n```\n## 参考文献\n1.[Fedora社区关于如何创建rpm的文档：](https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn)\n2.[Fedora社区详细编译rpm文档：](https://docs.fedoraproject.org/quick-docs/en-US/creating-rpm-packages.html)\n3.[CentOS官方SRC源码包下载地址：](http://vault.centos.org/)\n\n","source":"_posts/bak/RPMbuild打包流程.md","raw":"---\ntitle: RPMbuild打包流程\ndate: 2018-04-17 18:02:57\ncategories:\n- 技术\ntags:\n- 技术\n- 文档\n---\n## RPMbuild编译流程\n这是一个编写 RPM 文件的简明教程, 展示了如何快速创建一个简单的源代码包和二进制软件包。关于如何创建 RPM 文件的完整信息（包括更详细的技巧），请参考 [How to create an RPM package](https://fedoraproject.org/wiki/How_to_create_an_RPM_package)。\n##基础知识\n#1.RPM(RedHat Package Manager)是RedHat的软件包管理器。通过rpm可以在软件安装的过程中就把相关的依赖一起部署完毕，此外，rpm还有数据库协助软件升级、文件校验等；结合yum升级方式，选择rpm打包是很好的一种方法。\n#2.若要构建一个标准的 RPM 包，您需要创建 .spec 文件，其中包含软件打包的全部信息。然后，对此文件执行 rpmbuild 命令，经过这一步，系统会按照步骤生成最终的 RPM 包。一般情况，您应该把源代码包，比如由开发者发布的以 .tar.gz 结尾的文件，放入 ~/rpmbuild/SOURCES 目录。将.spec 文件放入 ~/rpmbuild/SPECS 目录，并命名为 \"软件包名.spec\" 。\n## 环境构建\n#1.创建一个打包专用的普通用户，避免使用root用户打包发生错误破坏系统：\n```bash\nuseradd makerpmgroupadd mockusermod -a -G mock makerpmpasswd makerpm\n```\n#2.安装打包需要用到的开发工具：\n```bash\nyum install  rpmdevtools \n```\n#3.切换到打包专用账号下，执行以下命令：\n```bash\nsu - makerpmrpmdev-setuptree\n```\n将会创建 ~/rpmbuild 目录作为 RPM 编译目录。此目录包含若干子目录，用于保存项目源码、RPM 配置文件以及最终的源码和二进制包。其中，SOURCES目录中存放的是源文件的压缩包（一般是tar.gz格式）以及其所需要的配置文件和patch等。BUILD目录存放build阶段解压的源文件压缩包。SPECS目录存放的是spec文件，打包的核心就是对该spec文件的编写。之后通过对该spec文件执行rpmbuild操作进行打包，最终生成的二进制RPM包存放于RPMS，源文件RPM包存放于SRAMS。同时在install阶段，为保证非root用户能打包，引入了BuildRoot，整个安装过程会在该目录发生。再根据spec文件中的%files指定打包需要哪些文件（从BUILDROOT的相应路径找到文件）。\n## 编译过程\n#1.我们打包所需的项目源码通常称为 'upstream' 源。我们将从项目网站上，将源码下载到 ~/rpmbuild/SOURCE 目录中。我们获得了一个 tarball 压缩文件, 这正是大多数 FOSS 项目首选发布形式。如果是内部代码托管环境，从内部代码服务器clone代码，然后使用python生成tarball压缩文件。我们平时的编译过程中通常使用一下两种方法：\n```bash\ncd ~/rpmbuild/SOURCES/\n```\n1.1\n```bash\nwget https://files.pythonhosted.org/packages/a1/0d/a1b490503545b3b4600b965eae5d44cc2b6ce27cfb44f4debc563dbb56d3/textfsm-0.4.1.tar.gz\n```\n1.2\n```bash\ngit clone git://git.openstack.org/openstack/nova\ncd nova\ngit checkout 16.1.0\npython setup.py sdist\n```\n#2.生成spec文件：spec文件可以使用vim或者rpmdev工具生成模板文件，也可以使用src格式rpm获取spec文件。\n#2.1\n```bash\nrpmdev-newspec textfsm\n```\n或者直接使用vim test.spec\n#2.2\n```bash\nwget http://vault.centos.org/centos/7/cloud/Source/openstack-pike/openstack-nova-16.1.0-1.el7.src.rpm\n```\n#2.2.1有了源码包，可以执行以下命令安装至 ~/rpmbuild 目录：\n```bash\nrpm -ivh 源码包名*.src.rpm\n```\n#2.2.2使用rpm2cpio解压源码包：\n```bash\nrpm2cpio openstack-nova-16.1.0-1.el7.src.rpm |cpio -div\n```\n#3.spec文件深入解析：\nName:\t\t\t\t\t\t#  软件包名，应与 SPEC 文件名一致。可通过宏{%name}来引用\nVersion:\t\t\t\t\t# 上游版本号 \nRelease: 1%{?dist}\t\t\t\t# rpm包的发行编号\nSummary:\t\t\t\t\t#  一行简短的软件包介绍。请使用美式英语。请勿在结尾添加标点！\nGroup:\t\t\t\t\t\t# 软件包组\nLicense:\t\t\t\t\t# 授权协议\nURL:\t\t\t\t\t\t# 软件包的项目主页\nSource0:\t\t\t\t\t# 软件源码包的URL地址\nBuildRoot:%{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)\n\t\t\t\t\t\t# 在 %install 阶段（%build 阶段后）文件需要安装至此位置。\nBuildRequires:\t\t\t\t\t# build过程需要安装的依赖\nRequires:\t\t\t\t\t# 编译生成的rpm安装所需要的依赖\n%description\t\t\t\t\t#  程序的详细/多行描述，请使用美式英语。每行必须小于等于 80 个字符。\n%prep\t\t\t\t\t\t#  打包准备阶段执行一些命令（如，解压源码包，打补丁等），以便开始编译。\n%setup -q -n %{name}-%{version} \t\t# 解压源码包到BUILD目录下\n%build\t\t\t\t\t\t#  包含构建阶段执行的命令，构建完成后便开始后续安装。\n%configure\nmake\n%{?_smp_mflags}\n%install\t\t\t\t\t#  包含安装阶段执行的命令。\nrm -rf %{buildroot}\nmake install DESTDIR=%{buildroot}\n%clean\t\t\t\t\t\t#  清理安装目录的命令。\nrm -rf %{buildroot}\n%files\t\t\t\t\t\t#  需要被打包/安装的文件列表。\n%defattr(-,root,root,-)\n%doc\n%changelog\t\t\t\t\t#  RPM 包变更日志。请使用示例中的格式。注意，不是软件本身的变更日志。\nspec文件详细介绍请参照：[spec文件详细介绍] (https://docs.fedoraproject.org/quick-docs/en-US/creating-rpm-packages.html#con_rpm-spec-file-overview)。\n#4.在编写spec文件时，使用到很多RPM宏命令，这些宏命令的定义可在/usr/lib/rpm/macros中查看，也可以通过以下命令查看： rpm --showrc有关宏命令的完整列表请参考：[Macros]（http://fedoraproject.org/wiki/Packaging:Guidelines#Macros）\n5.编译rpm包：\n```bash\nrpmbuild  -ba NAME.spec\n```\nrpmbuild命令可选参数：\n-bp         #只执行spec的%pre 段(解开源码包并打补丁，即只做准备)\n-bc         #执行spec的%pre和%build 段(准备并编译)\n-bi         #执行spec中%pre，%build与%install(准备，编译并安装)\n-bl         #检查spec中的%file段(查看文件是否齐全)\n-ba         #建立源码与二进制包(常用)\n-bb         #只建立二进制包(常用)\n-bs         #只建立源码包\n## 搭建yum源 \n#1.管理yum源需要一个工具createrepo，使用yum安装：\n```bash\nyum -y install createrepo\n```\n#2.创建yum仓库目录：\n```bash\nmkdir -p /date/repo/yum/ctyun/centos/{6,7}/cloud/x86_64/openstack-pike/\n```\n#3.生成repodate信息：\n```bash\ncd  /date/repo/yum/ctyun/centos/7/cloud/x86_64/openstack-pike/createrepo -pdo   .    .\n```\n#4.使用nignx对外提供web服务：\n```bash\nyum install -y nginx\nvim /etc/nginx/nginx.conf\nhttp {\n……\nautoindex on; \nautoindex_exact_size on;\nautoindex_localtime on;\n……\nserver {\n……\nroot         /date/repo/yum/;\n……\n\t}\n}\n```\n#5.重启Nginx服务，配置yum源配置文件：\n```bash\nvim /etc/yum.repos.d/local.repo\n[cloud]\nname=CentOS-$releasever - Cloud\nbaseurl=http://localhost_ip/ctyun/centos/$releasever/cloud/$basearch/openstack-pike/\ngpgcheck=0\nenabled=1\n```\n#6.每次将打好的rpm包拷到yum目录后需要重新更新yum索引文件:\n```bash\ncd /date/repo/yum/ctyun/centos/7/cloud/x86_64/openstack-pike/\ncreaterepo --update . \n```\n## 参考文献\n1.[Fedora社区关于如何创建rpm的文档：](https://fedoraproject.org/wiki/How_to_create_a_GNU_Hello_RPM_package/zh-cn)\n2.[Fedora社区详细编译rpm文档：](https://docs.fedoraproject.org/quick-docs/en-US/creating-rpm-packages.html)\n3.[CentOS官方SRC源码包下载地址：](http://vault.centos.org/)\n\n","slug":"bak/RPMbuild打包流程","published":1,"updated":"2018-11-16T13:03:39.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqa000af0u78qftp176"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/bak/hello-world.md","raw":"---\ntitle: Hello World\ncategories: \n- test\ntags:\n- 测试 \n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"bak/hello-world","published":1,"date":"2018-11-16T12:52:47.035Z","updated":"2018-11-16T13:03:39.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqc000cf0u7kxveet45"},{"title":"ansible安装和基本使用","date":"2018-04-08T09:31:37.000Z","_content":"## 安装配置\n\n# 1、安装\n```bash\n[root@litw-docker ~]# yum install ansible -y\n```\n# 2、配置秘钥免密认证\n```bash\n[root@litw-docker ~]# ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n63:0f:67:df:2e:9d:3c:9b:41:b5:f4:85:03:ad:db:78 root@litw-docker.novalocal\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|            ..   |\n|             ... |\n|             .o.o|\n|            . .o+|\n|        S o  +...|\n|       . * .ooE  |\n|          . .+o. |\n|            ..=o |\n|             .+o |\n+-----------------+\n\n[root@litw-docker ~]# ssh-copy-id root@192.168.101.6\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@192.168.101.6's password: \n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@192.168.101.6'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@litw-docker ~]# ssh-copy-id root@192.168.101.11\nThe authenticity of host '192.168.101.11 (192.168.101.11)' can't be established.\nECDSA key fingerprint is dd:a8:4a:aa:a3:09:92:50:50:53:e8:de:76:83:0c:05.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@192.168.101.11's password: \n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@192.168.101.11'\"\nand check to make sure that only the key(s) you wanted were added.\n```\n# 3、修改ansible配置hosts文件\n```bash\nvim /etc/ansible/hosts\n[test]\n192.168.101.6\n192.168.101.11\n```\n## ansible基本使用（模块）\n\n# 1、ping\n```bash\n[root@litw-docker ~]# ansible test -m ping\n192.168.101.6 | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n192.168.101.11 | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n```\n# 2、shell/command\n```bash\n[root@litw-docker ~]# ansible test -m shell -a \"ps aux | grep -c sshd\"\n192.168.101.6 | SUCCESS | rc=0 >>\n5\n\n192.168.101.11 | SUCCESS | rc=0 >>\n5\n\n[root@litw-docker ~]# ansible test -m command -a \"ps aux | grep -c sshd\"\n192.168.101.6 | FAILED | rc=1 >>\nerror: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).non-zero return code\n\n192.168.101.11 | FAILED | rc=1 >>\nerror: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).non-zero return code\n\n[root@litw-docker ~]# ansible test -m command -a \"uptime\"\n192.168.101.6 | SUCCESS | rc=0 >>\n 17:48:14 up 11 days, 54 min,  2 users,  load average: 0.07, 0.04, 0.05\n\n192.168.101.11 | SUCCESS | rc=0 >>\n 17:48:14 up 11 days, 54 min,  2 users,  load average: 0.00, 0.01, 0.05\n```\n可以看到command和shell模块最明显的区别是shell执行命令可以使用管道，command不可以。\n\n# 3、copy\n```bash\n[root@litw-docker ~]# ansible test -m copy -a \"src=/root/ip.txt dest=/tmp/test owner=root group=root mode=600\"\n192.168.101.11 | SUCCESS => {\n    \"changed\": true, \n    \"checksum\": \"1ec0d33dd7cfee811a9d0fc833d8d0b861084c95\", \n    \"dest\": \"/tmp/test\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"885a3db6120c0857ecd8a5e71a3c8400\", \n    \"mode\": \"0600\", \n    \"owner\": \"root\", \n    \"size\": 57, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1523181044.35-147146951272504/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"checksum\": \"1ec0d33dd7cfee811a9d0fc833d8d0b861084c95\", \n    \"dest\": \"/tmp/test\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"885a3db6120c0857ecd8a5e71a3c8400\", \n    \"mode\": \"0600\", \n    \"owner\": \"root\", \n    \"size\": 57, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1523181044.34-260315740643744/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n```\n# 4、service\n```bash\n[root@litw-docker ~]# ansible test -m service -a \"name=sshd state=started\"\n192.168.101.11 | SUCCESS => {\n    \"changed\": false, \n    \"name\": \"sshd\", \n    \"state\": \"started\", \n    \"status\": {\n        \"ActiveEnterTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ActiveEnterTimestampMonotonic\": \"39061736\", \n        \"ActiveExitTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ActiveExitTimestampMonotonic\": \"39051401\", \n        \"ActiveState\": \"active\", \n        \"After\": \"network.target system.slice systemd-journald.socket syslog.target auditd.service basic.target cloud-init.service\", \n        \"AllowIsolate\": \"no\", \n        \"AmbientCapabilities\": \"0\", \n        \"AssertResult\": \"yes\", \n        \"AssertTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"AssertTimestampMonotonic\": \"39053249\", \n        \"Before\": \"multi-user.target shutdown.target\", \n        \"BlockIOAccounting\": \"no\", \n        \"BlockIOWeight\": \"18446744073709551615\", \n        \"CPUAccounting\": \"no\", \n        \"CPUQuotaPerSecUSec\": \"infinity\", \n        \"CPUSchedulingPolicy\": \"0\", \n        \"CPUSchedulingPriority\": \"0\", \n        \"CPUSchedulingResetOnFork\": \"no\", \n        \"CPUShares\": \"18446744073709551615\", \n        \"CanIsolate\": \"no\", \n        \"CanReload\": \"yes\", \n        \"CanStart\": \"yes\", \n        \"CanStop\": \"yes\", \n        \"CapabilityBoundingSet\": \"18446744073709551615\", \n        \"ConditionResult\": \"yes\", \n        \"ConditionTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ConditionTimestampMonotonic\": \"39053249\", \n        \"Conflicts\": \"shutdown.target\", \n        \"ControlGroup\": \"/system.slice/sshd.service\", \n        \"ControlPID\": \"0\", \n        \"DefaultDependencies\": \"yes\", \n        \"Delegate\": \"no\", \n        \"Description\": \"OpenSSH server daemon\", \n        \"DevicePolicy\": \"auto\", \n        \"EnvironmentFile\": \"/etc/sysconfig/sshd (ignore_errors=no)\", \n        \"ExecMainCode\": \"0\", \n        \"ExecMainExitTimestampMonotonic\": \"0\", \n        \"ExecMainPID\": \"946\", \n        \"ExecMainStartTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ExecMainStartTimestampMonotonic\": \"39061689\", \n        \"ExecMainStatus\": \"0\", \n        \"ExecReload\": \"{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\", \n        \"ExecStart\": \"{ path=/usr/sbin/sshd ; argv[]=/usr/sbin/sshd -D $OPTIONS ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:21 CST] ; stop_time=[n/a] ; pid=946 ; code=(null) ; status=0/0 }\", \n        \"ExecStartPre\": \"{ path=/usr/sbin/sshd-keygen ; argv[]=/usr/sbin/sshd-keygen ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:21 CST] ; stop_time=[Wed 2018-03-28 16:54:21 CST] ; pid=943 ; code=exited ; status=0 }\", \n        \"FailureAction\": \"none\", \n        \"FileDescriptorStoreMax\": \"0\", \n        \"FragmentPath\": \"/usr/lib/systemd/system/sshd.service\", \n        \"GuessMainPID\": \"yes\", \n        \"IOScheduling\": \"0\", \n        \"Id\": \"sshd.service\", \n        \"IgnoreOnIsolate\": \"no\", \n        \"IgnoreOnSnapshot\": \"no\", \n        \"IgnoreSIGPIPE\": \"yes\", \n        \"InactiveEnterTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"InactiveEnterTimestampMonotonic\": \"39052998\", \n        \"InactiveExitTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"InactiveExitTimestampMonotonic\": \"39053607\", \n        \"JobTimeoutAction\": \"none\", \n        \"JobTimeoutUSec\": \"0\", \n        \"KillMode\": \"process\", \n        \"KillSignal\": \"15\", \n        \"LimitAS\": \"18446744073709551615\", \n        \"LimitCORE\": \"18446744073709551615\", \n        \"LimitCPU\": \"18446744073709551615\", \n        \"LimitDATA\": \"18446744073709551615\", \n        \"LimitFSIZE\": \"18446744073709551615\", \n        \"LimitLOCKS\": \"18446744073709551615\", \n        \"LimitMEMLOCK\": \"65536\", \n        \"LimitMSGQUEUE\": \"819200\", \n        \"LimitNICE\": \"0\", \n        \"LimitNOFILE\": \"4096\", \n        \"LimitNPROC\": \"14644\", \n        \"LimitRSS\": \"18446744073709551615\", \n        \"LimitRTPRIO\": \"0\", \n        \"LimitRTTIME\": \"18446744073709551615\", \n        \"LimitSIGPENDING\": \"14644\", \n        \"LimitSTACK\": \"18446744073709551615\", \n        \"LoadState\": \"loaded\", \n        \"MainPID\": \"946\", \n        \"MemoryAccounting\": \"no\", \n        \"MemoryCurrent\": \"18446744073709551615\", \n        \"MemoryLimit\": \"18446744073709551615\", \n        \"MountFlags\": \"0\", \n        \"Names\": \"sshd.service\", \n        \"NeedDaemonReload\": \"no\", \n        \"Nice\": \"0\", \n        \"NoNewPrivileges\": \"no\", \n        \"NonBlocking\": \"no\", \n        \"NotifyAccess\": \"none\", \n        \"OOMScoreAdjust\": \"0\", \n        \"OnFailureJobMode\": \"replace\", \n        \"PermissionsStartOnly\": \"no\", \n        \"PrivateDevices\": \"no\", \n        \"PrivateNetwork\": \"no\", \n        \"PrivateTmp\": \"no\", \n        \"ProtectHome\": \"no\", \n        \"ProtectSystem\": \"no\", \n        \"RefuseManualStart\": \"no\", \n        \"RefuseManualStop\": \"no\", \n        \"RemainAfterExit\": \"no\", \n        \"Requires\": \"basic.target\", \n        \"Restart\": \"on-failure\", \n        \"RestartUSec\": \"42s\", \n        \"Result\": \"success\", \n        \"RootDirectoryStartOnly\": \"no\", \n        \"RuntimeDirectoryMode\": \"0755\", \n        \"SameProcessGroup\": \"no\", \n        \"SecureBits\": \"0\", \n        \"SendSIGHUP\": \"no\", \n        \"SendSIGKILL\": \"yes\", \n        \"Slice\": \"system.slice\", \n        \"StandardError\": \"inherit\", \n        \"StandardInput\": \"null\", \n        \"StandardOutput\": \"journal\", \n        \"StartLimitAction\": \"none\", \n        \"StartLimitBurst\": \"5\", \n        \"StartLimitInterval\": \"10000000\", \n        \"StartupBlockIOWeight\": \"18446744073709551615\", \n        \"StartupCPUShares\": \"18446744073709551615\", \n        \"StatusErrno\": \"0\", \n        \"StopWhenUnneeded\": \"no\", \n        \"SubState\": \"running\", \n        \"SyslogLevelPrefix\": \"yes\", \n        \"SyslogPriority\": \"30\", \n        \"SystemCallErrorNumber\": \"0\", \n        \"TTYReset\": \"no\", \n        \"TTYVHangup\": \"no\", \n        \"TTYVTDisallocate\": \"no\", \n        \"TasksAccounting\": \"no\", \n        \"TasksCurrent\": \"18446744073709551615\", \n        \"TasksMax\": \"18446744073709551615\", \n        \"TimeoutStartUSec\": \"1min 30s\", \n        \"TimeoutStopUSec\": \"1min 30s\", \n        \"TimerSlackNSec\": \"50000\", \n        \"Transient\": \"no\", \n        \"Type\": \"simple\", \n        \"UMask\": \"0022\", \n        \"UnitFilePreset\": \"enabled\", \n        \"UnitFileState\": \"enabled\", \n        \"WantedBy\": \"cloud-init.service multi-user.target\", \n        \"Wants\": \"system.slice\", \n        \"WatchdogTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"WatchdogTimestampMonotonic\": \"39061722\", \n        \"WatchdogUSec\": \"0\"\n    }\n}\n192.168.101.6 | SUCCESS => {\n    \"changed\": false, \n    \"name\": \"sshd\", \n    \"state\": \"started\", \n    \"status\": {\n        \"ActiveEnterTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ActiveEnterTimestampMonotonic\": \"30808691\", \n        \"ActiveExitTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ActiveExitTimestampMonotonic\": \"30789169\", \n        \"ActiveState\": \"active\", \n        \"After\": \"cloud-init.service basic.target network.target syslog.target systemd-journald.socket auditd.service system.slice\", \n        \"AllowIsolate\": \"no\", \n        \"AmbientCapabilities\": \"0\", \n        \"AssertResult\": \"yes\", \n        \"AssertTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"AssertTimestampMonotonic\": \"30792622\", \n        \"Before\": \"shutdown.target multi-user.target\", \n        \"BlockIOAccounting\": \"no\", \n        \"BlockIOWeight\": \"18446744073709551615\", \n        \"CPUAccounting\": \"no\", \n        \"CPUQuotaPerSecUSec\": \"infinity\", \n        \"CPUSchedulingPolicy\": \"0\", \n        \"CPUSchedulingPriority\": \"0\", \n        \"CPUSchedulingResetOnFork\": \"no\", \n        \"CPUShares\": \"18446744073709551615\", \n        \"CanIsolate\": \"no\", \n        \"CanReload\": \"yes\", \n        \"CanStart\": \"yes\", \n        \"CanStop\": \"yes\", \n        \"CapabilityBoundingSet\": \"18446744073709551615\", \n        \"ConditionResult\": \"yes\", \n        \"ConditionTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ConditionTimestampMonotonic\": \"30792621\", \n        \"Conflicts\": \"shutdown.target\", \n        \"ControlGroup\": \"/system.slice/sshd.service\", \n        \"ControlPID\": \"0\", \n        \"DefaultDependencies\": \"yes\", \n        \"Delegate\": \"no\", \n        \"Description\": \"OpenSSH server daemon\", \n        \"DevicePolicy\": \"auto\", \n        \"EnvironmentFile\": \"/etc/sysconfig/sshd (ignore_errors=no)\", \n        \"ExecMainCode\": \"0\", \n        \"ExecMainExitTimestampMonotonic\": \"0\", \n        \"ExecMainPID\": \"944\", \n        \"ExecMainStartTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ExecMainStartTimestampMonotonic\": \"30808580\", \n        \"ExecMainStatus\": \"0\", \n        \"ExecReload\": \"{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\", \n        \"ExecStart\": \"{ path=/usr/sbin/sshd ; argv[]=/usr/sbin/sshd -D $OPTIONS ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:25 CST] ; stop_time=[n/a] ; pid=944 ; code=(null) ; status=0/0 }\", \n        \"ExecStartPre\": \"{ path=/usr/sbin/sshd-keygen ; argv[]=/usr/sbin/sshd-keygen ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:25 CST] ; stop_time=[Wed 2018-03-28 16:54:25 CST] ; pid=941 ; code=exited ; status=0 }\", \n        \"FailureAction\": \"none\", \n        \"FileDescriptorStoreMax\": \"0\", \n        \"FragmentPath\": \"/usr/lib/systemd/system/sshd.service\", \n        \"GuessMainPID\": \"yes\", \n        \"IOScheduling\": \"0\", \n        \"Id\": \"sshd.service\", \n        \"IgnoreOnIsolate\": \"no\", \n        \"IgnoreOnSnapshot\": \"no\", \n        \"IgnoreSIGPIPE\": \"yes\", \n        \"InactiveEnterTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"InactiveEnterTimestampMonotonic\": \"30792148\", \n        \"InactiveExitTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"InactiveExitTimestampMonotonic\": \"30793292\", \n        \"JobTimeoutAction\": \"none\", \n        \"JobTimeoutUSec\": \"0\", \n        \"KillMode\": \"process\", \n        \"KillSignal\": \"15\", \n        \"LimitAS\": \"18446744073709551615\", \n        \"LimitCORE\": \"18446744073709551615\", \n        \"LimitCPU\": \"18446744073709551615\", \n        \"LimitDATA\": \"18446744073709551615\", \n        \"LimitFSIZE\": \"18446744073709551615\", \n        \"LimitLOCKS\": \"18446744073709551615\", \n        \"LimitMEMLOCK\": \"65536\", \n        \"LimitMSGQUEUE\": \"819200\", \n        \"LimitNICE\": \"0\", \n        \"LimitNOFILE\": \"4096\", \n        \"LimitNPROC\": \"14644\", \n        \"LimitRSS\": \"18446744073709551615\", \n        \"LimitRTPRIO\": \"0\", \n        \"LimitRTTIME\": \"18446744073709551615\", \n        \"LimitSIGPENDING\": \"14644\", \n        \"LimitSTACK\": \"18446744073709551615\", \n        \"LoadState\": \"loaded\", \n        \"MainPID\": \"944\", \n        \"MemoryAccounting\": \"no\", \n        \"MemoryCurrent\": \"18446744073709551615\", \n        \"MemoryLimit\": \"18446744073709551615\", \n        \"MountFlags\": \"0\", \n        \"Names\": \"sshd.service\", \n        \"NeedDaemonReload\": \"no\", \n        \"Nice\": \"0\", \n        \"NoNewPrivileges\": \"no\", \n        \"NonBlocking\": \"no\", \n        \"NotifyAccess\": \"none\", \n        \"OOMScoreAdjust\": \"0\", \n        \"OnFailureJobMode\": \"replace\", \n        \"PermissionsStartOnly\": \"no\", \n        \"PrivateDevices\": \"no\", \n        \"PrivateNetwork\": \"no\", \n        \"PrivateTmp\": \"no\", \n        \"ProtectHome\": \"no\", \n        \"ProtectSystem\": \"no\", \n        \"RefuseManualStart\": \"no\", \n        \"RefuseManualStop\": \"no\", \n        \"RemainAfterExit\": \"no\", \n        \"Requires\": \"basic.target\", \n        \"Restart\": \"on-failure\", \n        \"RestartUSec\": \"42s\", \n        \"Result\": \"success\", \n        \"RootDirectoryStartOnly\": \"no\", \n        \"RuntimeDirectoryMode\": \"0755\", \n        \"SameProcessGroup\": \"no\", \n        \"SecureBits\": \"0\", \n        \"SendSIGHUP\": \"no\", \n        \"SendSIGKILL\": \"yes\", \n        \"Slice\": \"system.slice\", \n        \"StandardError\": \"inherit\", \n        \"StandardInput\": \"null\", \n        \"StandardOutput\": \"journal\", \n        \"StartLimitAction\": \"none\", \n        \"StartLimitBurst\": \"5\", \n        \"StartLimitInterval\": \"10000000\", \n        \"StartupBlockIOWeight\": \"18446744073709551615\", \n        \"StartupCPUShares\": \"18446744073709551615\", \n        \"StatusErrno\": \"0\", \n        \"StopWhenUnneeded\": \"no\", \n        \"SubState\": \"running\", \n        \"SyslogLevelPrefix\": \"yes\", \n        \"SyslogPriority\": \"30\", \n        \"SystemCallErrorNumber\": \"0\", \n        \"TTYReset\": \"no\", \n        \"TTYVHangup\": \"no\", \n        \"TTYVTDisallocate\": \"no\", \n        \"TasksAccounting\": \"no\", \n        \"TasksCurrent\": \"18446744073709551615\", \n        \"TasksMax\": \"18446744073709551615\", \n        \"TimeoutStartUSec\": \"1min 30s\", \n        \"TimeoutStopUSec\": \"1min 30s\", \n        \"TimerSlackNSec\": \"50000\", \n        \"Transient\": \"no\", \n        \"Type\": \"simple\", \n        \"UMask\": \"0022\", \n        \"UnitFilePreset\": \"enabled\", \n        \"UnitFileState\": \"enabled\", \n        \"WantedBy\": \"multi-user.target cloud-init.service\", \n        \"Wants\": \"system.slice\", \n        \"WatchdogTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"WatchdogTimestampMonotonic\": \"30808640\", \n        \"WatchdogUSec\": \"0\"\n    }\n}\n\n```\n# 5、yum\n```bash\n[root@litw-docker ~]# ansible test -m yum -a \"name=vim state=present\"\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"msg\": \"\", \n    \"rc\": 0, \n    \"results\": [\n        \"Loaded plugins: fastestmirror\\nLoading mirror speeds from cached hostfile\\n * base: mirrors.aliyun.com\\n * extras: mirrors.aliyun.com\\n * updates: mirrors.cn99.com\\nResolving Dependencies\\n--> Running transaction check\\n---> Package vim-enhanced.x86_64 2:7.4.160-2.el7 will be installed\\n-->\n\n内容太多，只摘取部分。\n```\n# 6、script\n```bash\n[root@litw-docker ~]# ansible test -m script -a \"/root/ping.sh\"\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"rc\": 0, \n    \"stderr\": \"Shared connection to 192.168.101.6 closed.\\r\\n\", \n    \"stdout\": \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\\r\\n64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=1.20 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.383 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.359 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.388 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.48 ms\\r\\n\\r\\n--- 192.168.101.1 ping statistics ---\\r\\n5 packets transmitted, 5 received, 0% packet loss, time 4001ms\\r\\nrtt min/avg/max/mdev = 0.359/0.764/1.488/0.485 ms\\r\\n\", \n    \"stdout_lines\": [\n        \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\", \n        \"64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=1.20 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.383 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.359 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.388 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.48 ms\", \n        \"\", \n        \"--- 192.168.101.1 ping statistics ---\", \n        \"5 packets transmitted, 5 received, 0% packet loss, time 4001ms\", \n        \"rtt min/avg/max/mdev = 0.359/0.764/1.488/0.485 ms\"\n    ]\n}\n192.168.101.11 | SUCCESS => {\n    \"changed\": true, \n    \"rc\": 0, \n    \"stderr\": \"Shared connection to 192.168.101.11 closed.\\r\\n\", \n    \"stdout\": \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\\r\\n64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.810 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.517 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.544 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.563 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.59 ms\\r\\n\\r\\n--- 192.168.101.1 ping statistics ---\\r\\n5 packets transmitted, 5 received, 0% packet loss, time 4000ms\\r\\nrtt min/avg/max/mdev = 0.517/0.806/1.599/0.411 ms\\r\\n\", \n    \"stdout_lines\": [\n        \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\", \n        \"64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.810 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.517 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.544 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.563 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.59 ms\", \n        \"\", \n        \"--- 192.168.101.1 ping statistics ---\", \n        \"5 packets transmitted, 5 received, 0% packet loss, time 4000ms\", \n        \"rtt min/avg/max/mdev = 0.517/0.806/1.599/0.411 ms\"\n    ]\n}\n```\n","source":"_posts/bak/ansible安装和基本使用.md","raw":"---\ntitle: ansible安装和基本使用\ndate: 2018-04-08 17:31:37\ncategories: \n- 技术\ntags: \n- 技术 \n- ansible \n- 自动化 \n- 文档 \n---\n## 安装配置\n\n# 1、安装\n```bash\n[root@litw-docker ~]# yum install ansible -y\n```\n# 2、配置秘钥免密认证\n```bash\n[root@litw-docker ~]# ssh-keygen\nGenerating public/private rsa key pair.\nEnter file in which to save the key (/root/.ssh/id_rsa): \nEnter passphrase (empty for no passphrase): \nEnter same passphrase again: \nYour identification has been saved in /root/.ssh/id_rsa.\nYour public key has been saved in /root/.ssh/id_rsa.pub.\nThe key fingerprint is:\n63:0f:67:df:2e:9d:3c:9b:41:b5:f4:85:03:ad:db:78 root@litw-docker.novalocal\nThe key's randomart image is:\n+--[ RSA 2048]----+\n|            ..   |\n|             ... |\n|             .o.o|\n|            . .o+|\n|        S o  +...|\n|       . * .ooE  |\n|          . .+o. |\n|            ..=o |\n|             .+o |\n+-----------------+\n\n[root@litw-docker ~]# ssh-copy-id root@192.168.101.6\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@192.168.101.6's password: \n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@192.168.101.6'\"\nand check to make sure that only the key(s) you wanted were added.\n\n[root@litw-docker ~]# ssh-copy-id root@192.168.101.11\nThe authenticity of host '192.168.101.11 (192.168.101.11)' can't be established.\nECDSA key fingerprint is dd:a8:4a:aa:a3:09:92:50:50:53:e8:de:76:83:0c:05.\nAre you sure you want to continue connecting (yes/no)? yes\n/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed\n/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys\nroot@192.168.101.11's password: \n\nNumber of key(s) added: 1\n\nNow try logging into the machine, with:   \"ssh 'root@192.168.101.11'\"\nand check to make sure that only the key(s) you wanted were added.\n```\n# 3、修改ansible配置hosts文件\n```bash\nvim /etc/ansible/hosts\n[test]\n192.168.101.6\n192.168.101.11\n```\n## ansible基本使用（模块）\n\n# 1、ping\n```bash\n[root@litw-docker ~]# ansible test -m ping\n192.168.101.6 | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n192.168.101.11 | SUCCESS => {\n    \"changed\": false, \n    \"ping\": \"pong\"\n}\n```\n# 2、shell/command\n```bash\n[root@litw-docker ~]# ansible test -m shell -a \"ps aux | grep -c sshd\"\n192.168.101.6 | SUCCESS | rc=0 >>\n5\n\n192.168.101.11 | SUCCESS | rc=0 >>\n5\n\n[root@litw-docker ~]# ansible test -m command -a \"ps aux | grep -c sshd\"\n192.168.101.6 | FAILED | rc=1 >>\nerror: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).non-zero return code\n\n192.168.101.11 | FAILED | rc=1 >>\nerror: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).non-zero return code\n\n[root@litw-docker ~]# ansible test -m command -a \"uptime\"\n192.168.101.6 | SUCCESS | rc=0 >>\n 17:48:14 up 11 days, 54 min,  2 users,  load average: 0.07, 0.04, 0.05\n\n192.168.101.11 | SUCCESS | rc=0 >>\n 17:48:14 up 11 days, 54 min,  2 users,  load average: 0.00, 0.01, 0.05\n```\n可以看到command和shell模块最明显的区别是shell执行命令可以使用管道，command不可以。\n\n# 3、copy\n```bash\n[root@litw-docker ~]# ansible test -m copy -a \"src=/root/ip.txt dest=/tmp/test owner=root group=root mode=600\"\n192.168.101.11 | SUCCESS => {\n    \"changed\": true, \n    \"checksum\": \"1ec0d33dd7cfee811a9d0fc833d8d0b861084c95\", \n    \"dest\": \"/tmp/test\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"885a3db6120c0857ecd8a5e71a3c8400\", \n    \"mode\": \"0600\", \n    \"owner\": \"root\", \n    \"size\": 57, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1523181044.35-147146951272504/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"checksum\": \"1ec0d33dd7cfee811a9d0fc833d8d0b861084c95\", \n    \"dest\": \"/tmp/test\", \n    \"gid\": 0, \n    \"group\": \"root\", \n    \"md5sum\": \"885a3db6120c0857ecd8a5e71a3c8400\", \n    \"mode\": \"0600\", \n    \"owner\": \"root\", \n    \"size\": 57, \n    \"src\": \"/root/.ansible/tmp/ansible-tmp-1523181044.34-260315740643744/source\", \n    \"state\": \"file\", \n    \"uid\": 0\n}\n```\n# 4、service\n```bash\n[root@litw-docker ~]# ansible test -m service -a \"name=sshd state=started\"\n192.168.101.11 | SUCCESS => {\n    \"changed\": false, \n    \"name\": \"sshd\", \n    \"state\": \"started\", \n    \"status\": {\n        \"ActiveEnterTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ActiveEnterTimestampMonotonic\": \"39061736\", \n        \"ActiveExitTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ActiveExitTimestampMonotonic\": \"39051401\", \n        \"ActiveState\": \"active\", \n        \"After\": \"network.target system.slice systemd-journald.socket syslog.target auditd.service basic.target cloud-init.service\", \n        \"AllowIsolate\": \"no\", \n        \"AmbientCapabilities\": \"0\", \n        \"AssertResult\": \"yes\", \n        \"AssertTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"AssertTimestampMonotonic\": \"39053249\", \n        \"Before\": \"multi-user.target shutdown.target\", \n        \"BlockIOAccounting\": \"no\", \n        \"BlockIOWeight\": \"18446744073709551615\", \n        \"CPUAccounting\": \"no\", \n        \"CPUQuotaPerSecUSec\": \"infinity\", \n        \"CPUSchedulingPolicy\": \"0\", \n        \"CPUSchedulingPriority\": \"0\", \n        \"CPUSchedulingResetOnFork\": \"no\", \n        \"CPUShares\": \"18446744073709551615\", \n        \"CanIsolate\": \"no\", \n        \"CanReload\": \"yes\", \n        \"CanStart\": \"yes\", \n        \"CanStop\": \"yes\", \n        \"CapabilityBoundingSet\": \"18446744073709551615\", \n        \"ConditionResult\": \"yes\", \n        \"ConditionTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ConditionTimestampMonotonic\": \"39053249\", \n        \"Conflicts\": \"shutdown.target\", \n        \"ControlGroup\": \"/system.slice/sshd.service\", \n        \"ControlPID\": \"0\", \n        \"DefaultDependencies\": \"yes\", \n        \"Delegate\": \"no\", \n        \"Description\": \"OpenSSH server daemon\", \n        \"DevicePolicy\": \"auto\", \n        \"EnvironmentFile\": \"/etc/sysconfig/sshd (ignore_errors=no)\", \n        \"ExecMainCode\": \"0\", \n        \"ExecMainExitTimestampMonotonic\": \"0\", \n        \"ExecMainPID\": \"946\", \n        \"ExecMainStartTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"ExecMainStartTimestampMonotonic\": \"39061689\", \n        \"ExecMainStatus\": \"0\", \n        \"ExecReload\": \"{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\", \n        \"ExecStart\": \"{ path=/usr/sbin/sshd ; argv[]=/usr/sbin/sshd -D $OPTIONS ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:21 CST] ; stop_time=[n/a] ; pid=946 ; code=(null) ; status=0/0 }\", \n        \"ExecStartPre\": \"{ path=/usr/sbin/sshd-keygen ; argv[]=/usr/sbin/sshd-keygen ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:21 CST] ; stop_time=[Wed 2018-03-28 16:54:21 CST] ; pid=943 ; code=exited ; status=0 }\", \n        \"FailureAction\": \"none\", \n        \"FileDescriptorStoreMax\": \"0\", \n        \"FragmentPath\": \"/usr/lib/systemd/system/sshd.service\", \n        \"GuessMainPID\": \"yes\", \n        \"IOScheduling\": \"0\", \n        \"Id\": \"sshd.service\", \n        \"IgnoreOnIsolate\": \"no\", \n        \"IgnoreOnSnapshot\": \"no\", \n        \"IgnoreSIGPIPE\": \"yes\", \n        \"InactiveEnterTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"InactiveEnterTimestampMonotonic\": \"39052998\", \n        \"InactiveExitTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"InactiveExitTimestampMonotonic\": \"39053607\", \n        \"JobTimeoutAction\": \"none\", \n        \"JobTimeoutUSec\": \"0\", \n        \"KillMode\": \"process\", \n        \"KillSignal\": \"15\", \n        \"LimitAS\": \"18446744073709551615\", \n        \"LimitCORE\": \"18446744073709551615\", \n        \"LimitCPU\": \"18446744073709551615\", \n        \"LimitDATA\": \"18446744073709551615\", \n        \"LimitFSIZE\": \"18446744073709551615\", \n        \"LimitLOCKS\": \"18446744073709551615\", \n        \"LimitMEMLOCK\": \"65536\", \n        \"LimitMSGQUEUE\": \"819200\", \n        \"LimitNICE\": \"0\", \n        \"LimitNOFILE\": \"4096\", \n        \"LimitNPROC\": \"14644\", \n        \"LimitRSS\": \"18446744073709551615\", \n        \"LimitRTPRIO\": \"0\", \n        \"LimitRTTIME\": \"18446744073709551615\", \n        \"LimitSIGPENDING\": \"14644\", \n        \"LimitSTACK\": \"18446744073709551615\", \n        \"LoadState\": \"loaded\", \n        \"MainPID\": \"946\", \n        \"MemoryAccounting\": \"no\", \n        \"MemoryCurrent\": \"18446744073709551615\", \n        \"MemoryLimit\": \"18446744073709551615\", \n        \"MountFlags\": \"0\", \n        \"Names\": \"sshd.service\", \n        \"NeedDaemonReload\": \"no\", \n        \"Nice\": \"0\", \n        \"NoNewPrivileges\": \"no\", \n        \"NonBlocking\": \"no\", \n        \"NotifyAccess\": \"none\", \n        \"OOMScoreAdjust\": \"0\", \n        \"OnFailureJobMode\": \"replace\", \n        \"PermissionsStartOnly\": \"no\", \n        \"PrivateDevices\": \"no\", \n        \"PrivateNetwork\": \"no\", \n        \"PrivateTmp\": \"no\", \n        \"ProtectHome\": \"no\", \n        \"ProtectSystem\": \"no\", \n        \"RefuseManualStart\": \"no\", \n        \"RefuseManualStop\": \"no\", \n        \"RemainAfterExit\": \"no\", \n        \"Requires\": \"basic.target\", \n        \"Restart\": \"on-failure\", \n        \"RestartUSec\": \"42s\", \n        \"Result\": \"success\", \n        \"RootDirectoryStartOnly\": \"no\", \n        \"RuntimeDirectoryMode\": \"0755\", \n        \"SameProcessGroup\": \"no\", \n        \"SecureBits\": \"0\", \n        \"SendSIGHUP\": \"no\", \n        \"SendSIGKILL\": \"yes\", \n        \"Slice\": \"system.slice\", \n        \"StandardError\": \"inherit\", \n        \"StandardInput\": \"null\", \n        \"StandardOutput\": \"journal\", \n        \"StartLimitAction\": \"none\", \n        \"StartLimitBurst\": \"5\", \n        \"StartLimitInterval\": \"10000000\", \n        \"StartupBlockIOWeight\": \"18446744073709551615\", \n        \"StartupCPUShares\": \"18446744073709551615\", \n        \"StatusErrno\": \"0\", \n        \"StopWhenUnneeded\": \"no\", \n        \"SubState\": \"running\", \n        \"SyslogLevelPrefix\": \"yes\", \n        \"SyslogPriority\": \"30\", \n        \"SystemCallErrorNumber\": \"0\", \n        \"TTYReset\": \"no\", \n        \"TTYVHangup\": \"no\", \n        \"TTYVTDisallocate\": \"no\", \n        \"TasksAccounting\": \"no\", \n        \"TasksCurrent\": \"18446744073709551615\", \n        \"TasksMax\": \"18446744073709551615\", \n        \"TimeoutStartUSec\": \"1min 30s\", \n        \"TimeoutStopUSec\": \"1min 30s\", \n        \"TimerSlackNSec\": \"50000\", \n        \"Transient\": \"no\", \n        \"Type\": \"simple\", \n        \"UMask\": \"0022\", \n        \"UnitFilePreset\": \"enabled\", \n        \"UnitFileState\": \"enabled\", \n        \"WantedBy\": \"cloud-init.service multi-user.target\", \n        \"Wants\": \"system.slice\", \n        \"WatchdogTimestamp\": \"Wed 2018-03-28 16:54:21 CST\", \n        \"WatchdogTimestampMonotonic\": \"39061722\", \n        \"WatchdogUSec\": \"0\"\n    }\n}\n192.168.101.6 | SUCCESS => {\n    \"changed\": false, \n    \"name\": \"sshd\", \n    \"state\": \"started\", \n    \"status\": {\n        \"ActiveEnterTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ActiveEnterTimestampMonotonic\": \"30808691\", \n        \"ActiveExitTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ActiveExitTimestampMonotonic\": \"30789169\", \n        \"ActiveState\": \"active\", \n        \"After\": \"cloud-init.service basic.target network.target syslog.target systemd-journald.socket auditd.service system.slice\", \n        \"AllowIsolate\": \"no\", \n        \"AmbientCapabilities\": \"0\", \n        \"AssertResult\": \"yes\", \n        \"AssertTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"AssertTimestampMonotonic\": \"30792622\", \n        \"Before\": \"shutdown.target multi-user.target\", \n        \"BlockIOAccounting\": \"no\", \n        \"BlockIOWeight\": \"18446744073709551615\", \n        \"CPUAccounting\": \"no\", \n        \"CPUQuotaPerSecUSec\": \"infinity\", \n        \"CPUSchedulingPolicy\": \"0\", \n        \"CPUSchedulingPriority\": \"0\", \n        \"CPUSchedulingResetOnFork\": \"no\", \n        \"CPUShares\": \"18446744073709551615\", \n        \"CanIsolate\": \"no\", \n        \"CanReload\": \"yes\", \n        \"CanStart\": \"yes\", \n        \"CanStop\": \"yes\", \n        \"CapabilityBoundingSet\": \"18446744073709551615\", \n        \"ConditionResult\": \"yes\", \n        \"ConditionTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ConditionTimestampMonotonic\": \"30792621\", \n        \"Conflicts\": \"shutdown.target\", \n        \"ControlGroup\": \"/system.slice/sshd.service\", \n        \"ControlPID\": \"0\", \n        \"DefaultDependencies\": \"yes\", \n        \"Delegate\": \"no\", \n        \"Description\": \"OpenSSH server daemon\", \n        \"DevicePolicy\": \"auto\", \n        \"EnvironmentFile\": \"/etc/sysconfig/sshd (ignore_errors=no)\", \n        \"ExecMainCode\": \"0\", \n        \"ExecMainExitTimestampMonotonic\": \"0\", \n        \"ExecMainPID\": \"944\", \n        \"ExecMainStartTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"ExecMainStartTimestampMonotonic\": \"30808580\", \n        \"ExecMainStatus\": \"0\", \n        \"ExecReload\": \"{ path=/bin/kill ; argv[]=/bin/kill -HUP $MAINPID ; ignore_errors=no ; start_time=[n/a] ; stop_time=[n/a] ; pid=0 ; code=(null) ; status=0/0 }\", \n        \"ExecStart\": \"{ path=/usr/sbin/sshd ; argv[]=/usr/sbin/sshd -D $OPTIONS ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:25 CST] ; stop_time=[n/a] ; pid=944 ; code=(null) ; status=0/0 }\", \n        \"ExecStartPre\": \"{ path=/usr/sbin/sshd-keygen ; argv[]=/usr/sbin/sshd-keygen ; ignore_errors=no ; start_time=[Wed 2018-03-28 16:54:25 CST] ; stop_time=[Wed 2018-03-28 16:54:25 CST] ; pid=941 ; code=exited ; status=0 }\", \n        \"FailureAction\": \"none\", \n        \"FileDescriptorStoreMax\": \"0\", \n        \"FragmentPath\": \"/usr/lib/systemd/system/sshd.service\", \n        \"GuessMainPID\": \"yes\", \n        \"IOScheduling\": \"0\", \n        \"Id\": \"sshd.service\", \n        \"IgnoreOnIsolate\": \"no\", \n        \"IgnoreOnSnapshot\": \"no\", \n        \"IgnoreSIGPIPE\": \"yes\", \n        \"InactiveEnterTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"InactiveEnterTimestampMonotonic\": \"30792148\", \n        \"InactiveExitTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"InactiveExitTimestampMonotonic\": \"30793292\", \n        \"JobTimeoutAction\": \"none\", \n        \"JobTimeoutUSec\": \"0\", \n        \"KillMode\": \"process\", \n        \"KillSignal\": \"15\", \n        \"LimitAS\": \"18446744073709551615\", \n        \"LimitCORE\": \"18446744073709551615\", \n        \"LimitCPU\": \"18446744073709551615\", \n        \"LimitDATA\": \"18446744073709551615\", \n        \"LimitFSIZE\": \"18446744073709551615\", \n        \"LimitLOCKS\": \"18446744073709551615\", \n        \"LimitMEMLOCK\": \"65536\", \n        \"LimitMSGQUEUE\": \"819200\", \n        \"LimitNICE\": \"0\", \n        \"LimitNOFILE\": \"4096\", \n        \"LimitNPROC\": \"14644\", \n        \"LimitRSS\": \"18446744073709551615\", \n        \"LimitRTPRIO\": \"0\", \n        \"LimitRTTIME\": \"18446744073709551615\", \n        \"LimitSIGPENDING\": \"14644\", \n        \"LimitSTACK\": \"18446744073709551615\", \n        \"LoadState\": \"loaded\", \n        \"MainPID\": \"944\", \n        \"MemoryAccounting\": \"no\", \n        \"MemoryCurrent\": \"18446744073709551615\", \n        \"MemoryLimit\": \"18446744073709551615\", \n        \"MountFlags\": \"0\", \n        \"Names\": \"sshd.service\", \n        \"NeedDaemonReload\": \"no\", \n        \"Nice\": \"0\", \n        \"NoNewPrivileges\": \"no\", \n        \"NonBlocking\": \"no\", \n        \"NotifyAccess\": \"none\", \n        \"OOMScoreAdjust\": \"0\", \n        \"OnFailureJobMode\": \"replace\", \n        \"PermissionsStartOnly\": \"no\", \n        \"PrivateDevices\": \"no\", \n        \"PrivateNetwork\": \"no\", \n        \"PrivateTmp\": \"no\", \n        \"ProtectHome\": \"no\", \n        \"ProtectSystem\": \"no\", \n        \"RefuseManualStart\": \"no\", \n        \"RefuseManualStop\": \"no\", \n        \"RemainAfterExit\": \"no\", \n        \"Requires\": \"basic.target\", \n        \"Restart\": \"on-failure\", \n        \"RestartUSec\": \"42s\", \n        \"Result\": \"success\", \n        \"RootDirectoryStartOnly\": \"no\", \n        \"RuntimeDirectoryMode\": \"0755\", \n        \"SameProcessGroup\": \"no\", \n        \"SecureBits\": \"0\", \n        \"SendSIGHUP\": \"no\", \n        \"SendSIGKILL\": \"yes\", \n        \"Slice\": \"system.slice\", \n        \"StandardError\": \"inherit\", \n        \"StandardInput\": \"null\", \n        \"StandardOutput\": \"journal\", \n        \"StartLimitAction\": \"none\", \n        \"StartLimitBurst\": \"5\", \n        \"StartLimitInterval\": \"10000000\", \n        \"StartupBlockIOWeight\": \"18446744073709551615\", \n        \"StartupCPUShares\": \"18446744073709551615\", \n        \"StatusErrno\": \"0\", \n        \"StopWhenUnneeded\": \"no\", \n        \"SubState\": \"running\", \n        \"SyslogLevelPrefix\": \"yes\", \n        \"SyslogPriority\": \"30\", \n        \"SystemCallErrorNumber\": \"0\", \n        \"TTYReset\": \"no\", \n        \"TTYVHangup\": \"no\", \n        \"TTYVTDisallocate\": \"no\", \n        \"TasksAccounting\": \"no\", \n        \"TasksCurrent\": \"18446744073709551615\", \n        \"TasksMax\": \"18446744073709551615\", \n        \"TimeoutStartUSec\": \"1min 30s\", \n        \"TimeoutStopUSec\": \"1min 30s\", \n        \"TimerSlackNSec\": \"50000\", \n        \"Transient\": \"no\", \n        \"Type\": \"simple\", \n        \"UMask\": \"0022\", \n        \"UnitFilePreset\": \"enabled\", \n        \"UnitFileState\": \"enabled\", \n        \"WantedBy\": \"multi-user.target cloud-init.service\", \n        \"Wants\": \"system.slice\", \n        \"WatchdogTimestamp\": \"Wed 2018-03-28 16:54:25 CST\", \n        \"WatchdogTimestampMonotonic\": \"30808640\", \n        \"WatchdogUSec\": \"0\"\n    }\n}\n\n```\n# 5、yum\n```bash\n[root@litw-docker ~]# ansible test -m yum -a \"name=vim state=present\"\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"msg\": \"\", \n    \"rc\": 0, \n    \"results\": [\n        \"Loaded plugins: fastestmirror\\nLoading mirror speeds from cached hostfile\\n * base: mirrors.aliyun.com\\n * extras: mirrors.aliyun.com\\n * updates: mirrors.cn99.com\\nResolving Dependencies\\n--> Running transaction check\\n---> Package vim-enhanced.x86_64 2:7.4.160-2.el7 will be installed\\n-->\n\n内容太多，只摘取部分。\n```\n# 6、script\n```bash\n[root@litw-docker ~]# ansible test -m script -a \"/root/ping.sh\"\n192.168.101.6 | SUCCESS => {\n    \"changed\": true, \n    \"rc\": 0, \n    \"stderr\": \"Shared connection to 192.168.101.6 closed.\\r\\n\", \n    \"stdout\": \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\\r\\n64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=1.20 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.383 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.359 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.388 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.48 ms\\r\\n\\r\\n--- 192.168.101.1 ping statistics ---\\r\\n5 packets transmitted, 5 received, 0% packet loss, time 4001ms\\r\\nrtt min/avg/max/mdev = 0.359/0.764/1.488/0.485 ms\\r\\n\", \n    \"stdout_lines\": [\n        \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\", \n        \"64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=1.20 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.383 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.359 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.388 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.48 ms\", \n        \"\", \n        \"--- 192.168.101.1 ping statistics ---\", \n        \"5 packets transmitted, 5 received, 0% packet loss, time 4001ms\", \n        \"rtt min/avg/max/mdev = 0.359/0.764/1.488/0.485 ms\"\n    ]\n}\n192.168.101.11 | SUCCESS => {\n    \"changed\": true, \n    \"rc\": 0, \n    \"stderr\": \"Shared connection to 192.168.101.11 closed.\\r\\n\", \n    \"stdout\": \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\\r\\n64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.810 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.517 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.544 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.563 ms\\r\\n64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.59 ms\\r\\n\\r\\n--- 192.168.101.1 ping statistics ---\\r\\n5 packets transmitted, 5 received, 0% packet loss, time 4000ms\\r\\nrtt min/avg/max/mdev = 0.517/0.806/1.599/0.411 ms\\r\\n\", \n    \"stdout_lines\": [\n        \"PING 192.168.101.1 (192.168.101.1) 56(84) bytes of data.\", \n        \"64 bytes from 192.168.101.1: icmp_seq=1 ttl=64 time=0.810 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=2 ttl=64 time=0.517 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=3 ttl=64 time=0.544 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=4 ttl=64 time=0.563 ms\", \n        \"64 bytes from 192.168.101.1: icmp_seq=5 ttl=64 time=1.59 ms\", \n        \"\", \n        \"--- 192.168.101.1 ping statistics ---\", \n        \"5 packets transmitted, 5 received, 0% packet loss, time 4000ms\", \n        \"rtt min/avg/max/mdev = 0.517/0.806/1.599/0.411 ms\"\n    ]\n}\n```\n","slug":"bak/ansible安装和基本使用","published":1,"updated":"2018-11-16T13:03:39.574Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqd000ff0u70avcaxso"},{"title":"hexo给文章添加分类和标签","date":"2018-04-02T07:05:51.000Z","_content":"[本文为转转，原文链接](https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/)\n\n    本教程针对的是Mac环境下，nexT主题的文章分类和标签设置，其他主题也应该是类似的。添加成功后会在侧边栏或导航栏生成“分类”和“标签”这两个选项，看下图：\n\n文章分类、标签\n\n点击“分类”后的页面：\n\n文章分类页\n\n点击“标签”后的页面：\n\n标签\n\nok，大概效果就是这样的，下面进入教程\n\n1、创建“分类”选项\n1.1 生成“分类”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n$ hexo new page categories\n成功后会提示：\n\nINFO  Created: ~/Documents/blog/source/categories/index.md\n根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\n---\n添加type: \"categories\"到内容中，添加后是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"categories\"\n---\n保存并关闭文件。\n\n1.2 给文章添加“categories”属性\n打开需要添加分类的文章，为其添加categories属性。下方的categories: web前端表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。\n\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\n---\n至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。\n\n2、创建“标签”选项\n2.1 生成“标签”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n$ hexo new page tags\n成功后会提示：\n\nINFO  Created: ~/Documents/blog/source/tags/index.md\n根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：\n\n---\ntitle: 标签\ndate: 2017-05-27 14:22:08\n---\n添加type: \"tags\"到内容中，添加后是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"tags\"\n---\n保存并关闭文件。\n\n2.2 给文章添加“tags”属性\n打开需要添加标签的文章，为其添加tags属性。下方的tags:下方的- jQuery - 表格\n- 表单验证就是这篇文章的标签了\n\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\ntags:\n- jQuery\n- 表格\n- 表单验证\n---\n至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。\n\n细心的朋友可能已经发现，这两个的设置几乎一模一样！是的，没错，思路都是一样的。所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了。\n\nscaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。\n\n教程结束，赶紧去设置吧！\n","source":"_posts/bak/hexo给文章添加分类和标签.md","raw":"---\ntitle: hexo给文章添加分类和标签\ndate: 2018-04-02 15:05:51\ncategories:\n- 教程\ntags:\n- 摘抄\n- 文档\n---\n[本文为转转，原文链接](https://linlif.github.io/2017/05/27/Hexo%E4%BD%BF%E7%94%A8%E6%94%BB%E7%95%A5-%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/)\n\n    本教程针对的是Mac环境下，nexT主题的文章分类和标签设置，其他主题也应该是类似的。添加成功后会在侧边栏或导航栏生成“分类”和“标签”这两个选项，看下图：\n\n文章分类、标签\n\n点击“分类”后的页面：\n\n文章分类页\n\n点击“标签”后的页面：\n\n标签\n\nok，大概效果就是这样的，下面进入教程\n\n1、创建“分类”选项\n1.1 生成“分类”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n$ hexo new page categories\n成功后会提示：\n\nINFO  Created: ~/Documents/blog/source/categories/index.md\n根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\n---\n添加type: \"categories\"到内容中，添加后是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"categories\"\n---\n保存并关闭文件。\n\n1.2 给文章添加“categories”属性\n打开需要添加分类的文章，为其添加categories属性。下方的categories: web前端表示添加这篇文章到“web前端”这个分类。注意：hexo一篇文章只能属于一个分类，也就是说如果在“- web前端”下方添加“-xxx”，hexo不会产生两个分类，而是把分类嵌套（即该文章属于 “- web前端”下的 “-xxx ”分类）。\n\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\n---\n至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。\n\n2、创建“标签”选项\n2.1 生成“标签”页并添加tpye属性\n打开命令行，进入博客所在文件夹。执行命令\n\n$ hexo new page tags\n成功后会提示：\n\nINFO  Created: ~/Documents/blog/source/tags/index.md\n根据上面的路径，找到index.md这个文件，打开后默认内容是这样的：\n\n---\ntitle: 标签\ndate: 2017-05-27 14:22:08\n---\n添加type: \"tags\"到内容中，添加后是这样的：\n\n---\ntitle: 文章分类\ndate: 2017-05-27 13:47:40\ntype: \"tags\"\n---\n保存并关闭文件。\n\n2.2 给文章添加“tags”属性\n打开需要添加标签的文章，为其添加tags属性。下方的tags:下方的- jQuery - 表格\n- 表单验证就是这篇文章的标签了\n\n---\ntitle: jQuery对表单的操作及更多应用\ndate: 2017-05-26 12:12:57\ncategories: \n- web前端\ntags:\n- jQuery\n- 表格\n- 表单验证\n---\n至此，成功给文章添加分类，点击首页的“标签”可以看到该标签下的所有文章。当然，只有添加了tags: xxx的文章才会被收录到首页的“标签”中。\n\n细心的朋友可能已经发现，这两个的设置几乎一模一样！是的，没错，思路都是一样的。所以我们可以打开scaffolds/post.md文件，在tages:上面加入categories:,保存后，之后执行hexo new 文章名命令生成的文件，页面里就有categories:项了。\n\nscaffolds目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值。\n\n教程结束，赶紧去设置吧！\n","slug":"bak/hexo给文章添加分类和标签","published":1,"updated":"2018-11-16T13:03:39.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqf000if0u7y39tnxws"},{"title":"test","date":"2018-11-16T13:10:11.000Z","_content":"test\nqaq\n","source":"_posts/bak/test-1.md","raw":"---\ntitle: test\ndate: 2018-11-16 21:10:11\ncategories:\ntags:\n---\ntest\nqaq\n","slug":"bak/test-1","published":1,"updated":"2018-11-16T13:10:31.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqg000jf0u7av00rsh8"},{"title":"为人处世话方圆","date":"2018-03-30T08:35:14.000Z","_content":"## 本文为短美文章网摘抄,[原文链接](http://www.DuanMeiWen.Com).\n## 为人处世话方圆\n　　感悟精选（1）：\n\n　　为人处世话方圆\n\n　　怎样处世才是最好，是“方”还是“圆”？有的人说是“圆”——圆滑乖巧、八面玲珑，有的人说是“方”——方正不阿、坚持原则。其实，偏重“圆”和偏重“方”都是不恰当的，“方”和“圆”乃是人相交的不可或缺，不可偏废的两大策略。\n\n　　先谈谈“圆”。[原文链接](http://www.DuanMeiWen.Com)\n\n　　一个恰如好处“行圆”的人，也就是在重要时候讲究变通灵活的人，其人际交往的回旋余地就大，其各方面成功的可能性就大。火车上，一个小伙躺在座位上。有一位母亲牵着儿子上车了，儿子摇着小伙子说：“叔叔，我要坐！”小伙装睡不加理睬。母亲婉转地对儿子说：“别吵叔叔，叔叔累了，他躺一会儿，会让给你坐的。”小伙听罢，忙起身红着脸说：“你们坐吧！”看来，这位母亲十分懂得交际之道。在当时，如果这位母亲指责小伙子的不是，其行为虽无可非议，但却有可能造成两者间紧张关系，于事无补。“行圆”，有它则会一帆风顺，无它则是逆水行舟。\n\n　　再说说“方”。\n\n　　历史上，忠尽耿耿的屈原、刚直无私的包拯、清正廉洁的海瑞、浩然正气的文天祥以及隐居深山不食周粟的伯夷、叔齐等等，都不失为“行方”的典型，也就因此，而流芳百世。如果一个方正不阿、坚持原则恰到好处，就会受到人们的钦佩、信任，由此带来一些意想不到的好效果。有位护士刚从校园毕业，在一家医院学习，其间若能让院方满意，便可获得一份正式工作，否则就得离开。一天，有位因车祸而生命垂危的病人需要手术，这位实习护士被安排作处科手术专家、院长亨利教授的助手。当手术将完，患者伤口即将缝合时，这位护士突然严肃地对院长说：“亨利教授，我们用了12块纱布，但是您只取出了11块。”院长不屑一顾地回答说：“我已经全部取出了，不要多说，立即缝合。”“不”，这位护士高声抗议道，“我们确实用了12块纱布。”院长对此不加理睬，命令道：“听我的，准备缝合。”这位实习护士听到后，几乎大叫起来：“你是医生，你不能这样做！”直到这时，院长冷漠的脸上才浮出一丝微笑。他举起手心里握着的每12块纱布，高声宣布道：“她是我最合格的助手。”不用说，这位实习护士理所当然地获得了这份工作。如果在当时，这位实习护士不会怎样呢？毋庸置疑她将会失去这份正式工作。这个实例说明了“行方”的好\n\n　　处。\n\n　　感悟精选（2）：\n\n　　处世之本话“方圆”\n\n　　“方”为做人之本。要求为人正直、诚实、谦逊、勤勉、质朴、守信、耐心、勇气、公正，对人要真诚、友善、宽容、乐于助人、善于分享。――真正卓越的人生，少不了正确的价值观，也就是品德。\n\n　　在所有成功的要素中，品德是成功之本。所以，一个人想要成功，他品质是最为关键的，因为人的品质决定人生成败！为人要低调，低调做人，能够在你周围持续健康的空气，构成一个良好的人际生态环境。\n\n　　“圆”为处世之道。要求做事讲究策略、方法、技巧和艺术性。要用心地与人进行良好的沟通，要善于与人相处与合作、要用心建立广泛的人脉、要求进行广泛的资源整合。\n\n　　做事要高调，高调做事，能够赢得用心的支持和声誉。\n\n　　在现实生活中我们常见一些八面玲珑，但心术不正的交际高手，由于缺少“方”之灵魂，他们最终将难以成功。但同时我们也经常看到不少做人十分本份，待人十分真诚的职场人士，由于缺少“圆”之艺术郁不得志，也很难获得成功。\n\n　　内方外圆的为人处世之道是一个人获得成功的一个重要因素。\n\n　　处世面子学：对待主子的亲人比亲人还亲。\n\n　　面子是地位和身份的象征，有面子的撑面子，没有面子充面子；自己要面子，也要给人以面子；要赏脸、捧场；会借光遮羞。\n\n　　处世隐忍学：做一个全职能的好部属。\n\n　　小不忍而乱大谋。韩信能忍胯下之辱，勾践能赏夫差之便，委曲求全，寻机潜龙腾空。祸福相依，见好就收。水至清则无鱼，人至察则无徒；得理饶人，韬光养晦，隐忍处世。\n\n　　处世识人学：识人、观人、御人求人，人尽其能\n\n　　认人，观人有绝招，一招更比一招妙；认人、观人有决窍，要看衣食住行和爱好；言为心声，眼为心窗，都是真人不露相。\n\n　　处世变通学：是奴才就要有奴才样，可主子离了我也玩不转。\n\n　　穷则变，变则通，通则久。规矩是死的，人是活的，具体问题具体分析，因人、因时、因地而异，不让条款害死人，大活人不能让尿憋死，话糟理不糟，以变应变，不拘定法，见招拆招。\n\n　　处世糊涂学：在同船共渡与党同伐异间寻求平衡。\n\n　　不要聪明反被聪明误。机关算尽太聪明，反算了卿卿性命；费尽心机，聪明反被聪明误。聪明难，糊涂更难，装聋作哑，招痴卖傻，大智若愚，大愚有智，以小糊涂换得大好处。\n\n　　处世中庸学：冷静周旋，把危机不见于无形之中。\n\n　　“厚”能摆正自己的位置，“黑”能在纷争的现实社会中立足。报朴守拙不偏不依为中庸，不急功近利，但是犹不及；无欲速，一无见小利，欲速则不达；既不功高盖主，也不让人小瞧。\n\n　　处世交际学：做一个一呼百应的人。\n\n　　适应社会也不失自我。处世交际的高妙在于心眼是否灵活，手段是否高妙，找对庙门走对路，好风借力，借梯登天，勤学蜘蛛织网，不能平时不烧香，临时抱佛脚。\n\n　　处世应酬学：收买人心方面，敢于不惜血本。\n\n　　见到先生说书，见到屠夫说猪。平时多烧香，用时不慌张，烧香有烧香的地方，烧香也要烧香的规矩。\n\n　　处世性别学：无善无不善，心理变化，皆循力学公例而行\n\n　　手指月，人能循着手看去就能够望见天空上之月；人能循着性格研究去，就能够窥见人性之真相。\n\n　　处世包装学：把自己装扮成可教之儒子。\n\n　　善于包装是智慧。把自己当成联合国大使来包装自己。\n\n　　感悟精选（3）：\n\n　　为人处世话方圆\n\n　　圆形象征着循环、永恒、完美、完整和力量；圆，代表着圆满、圆通与圆润。意味着自由和舒畅。如佛像头上或身上闪闪的光环，代表着佛的智慧与觉悟。又如佛教徒携带的圆润的念珠等，都是实践圆成佛道的资具，即法器。更如道教的太极图，圆内以S曲线分黑白环弧形，白中有一个小黑圆，黑中有一个小白圆。白为阳，黑为阴，象征阴阳互根。环弧形如两鱼交游状，以示阴阳变化循环不已。太极生两仪，两仪生四象，四象生八卦，八八六十四卦，乃至无穷。伏羲的先天八卦经周文王演《易》和孔子对《易经》的解读，以及后人不断地丰富与发展，构成了中华民族的文化。\n\n　　中国人做事爱讲究圆――圆活、圆通、圆顺、圆浑等。圆，意味着好、美、圆满、成熟、快乐，不缺失、很完美、很周全，方方面面都能照顾到。佛教认为圆，不偏倚，圆则通。《楞严经》中说“慧觉圆通，得无疑惑。”做人要圆活，做事要通理、合法。佛教认为人通佛法，也就通晓了活法。儒家将圆（即“○”）视为大道之体，大道之体即是仁爱、友善、宽恕、平和。“○”就是“0”，是开始，是所有一切进程数字的起点，饱含着无限的企盼与希冀。“0”是无，呈现出一种空无、虚无状态，这是佛陀极力推崇的人生理念。在0和空无中，生命能够对存在无碍地接纳。最主要的是“0”的谐音是灵，除表示灵活灵动外，还指向心灵和灵魂。它将我们引入高尚的精神生活境界。\n\n　　在当下社会，这个“0”被“8”极大地侵害和扭曲了（圆环可扭转成8）。因为8的谐音为发，贴合人们企盼发财的愿望。所以“8”字被许多人疯狂地追逐着，如出高价挑选内含88的电话号码和汽车牌号，出门远行要选内含8的日期或时间，结婚、签约、开业也选8号18号28号之类的吉日……。结果将“0”扭结成麻花状。如果人把自己扭结纠缠成麻花状，生命还能会舒展、畅快妈？\n\n　　圆，在人生各个年龄段里，孩子讲圆润、青年讲圆活、成年讲圆熟、老年讲圆通。但天有阴晴，月有圆缺，人有悲欢离合，谁也脱离不开自然的属性与规律。求圆只是一个完美的愿望。用我们儿时天真的眼光，来看今日难以忘怀的人和事，用青春不知圆为何物的心态，去体验被锐器刺痛内心的感受，慢慢就会觉悟到生命中有点遗憾，有点缺失，有点笨拙，有点疏忽，才会让自己比他人多一些选取，多一些自由，多一些强项。实际上，自然界那些有强大生命力的、鲜活跃动的、奇异蓬勃的、成功傲世的，往往不是圆的东西，而是尖锐的、粗狂的、忤逆的、乖张的……，无论是矿物、植物、动物、人物……。果实圆了也熟了，也该脱落了。我们总能在一个人身上，找到左伸右突的棱角，这些有尖角、有朝气、鬼点子多的人，往往比圆滑、老道、墨守成规的人更具有想象力，更惹人喜欢。这从这方面说是缺点，从那方面说恰恰是保鲜药、防腐剂和激活力，是优点。\n\n　　所以，在讲圆的同时，不能不讲方。方圆之道，自古至今都被视为生命之大道，做人之大智，做事之大端。\n\n　　方，如天安门广场托起圆球和圆柱的长方形花坛，像中山公园承载革命先驱孙中山脚步的方形花坛。方，是做人之本，是处事的原则与目标，是做人的正气与骨气，是人立身的脊梁和应有的品质。圆，是处世之道，是处事的手段与策略，是处世的成熟、老练与圆融。千百年来，“方圆有致”被公认为是最适合中国人做人、做事的成功心法，成大事者的奥秘正在于方与圆完美的结合，恰如古钱币，方外有圆，圆中有方，方圆相济，方圆合一；也即天地人三才合一。\n\n　　方圆之道是中国哲学和文化中所特有的概念；方圆之道是中国经典中的经典，哲学中的哲学，智慧中的智慧。孟子说：“规矩，方圆之至也。”黄炎培说：“和若春风，萧若秋霜。取象于钱，外圆内方。”方圆的世界，方圆的人生，方圆揭示了为人处世的高超艺术，是为人处世永恒的智慧。为人没有方，会被视作软弱可欺；做事不懂圆，会处处树敌，事事碰壁。尚若太过方正或太过圆滑，也会步履艰难甚至寸步难行。所以，做人做事该方则方，该圆则圆，做到方圆有度，恰到好处，并使之提升为自身内在的品质，才能圆润通达。\n\n　　人！只有运用好方圆之道，才能进退自若，所向披靡，无往而不胜。\n","source":"_posts/bak/处世话方圆.md","raw":"---\ntitle: 为人处世话方圆\ndate: 2018-03-30 16:35:14\ncategories: \n- test\ntags:\n- 摘抄\n- 心情\n- 美文\n---\n## 本文为短美文章网摘抄,[原文链接](http://www.DuanMeiWen.Com).\n## 为人处世话方圆\n　　感悟精选（1）：\n\n　　为人处世话方圆\n\n　　怎样处世才是最好，是“方”还是“圆”？有的人说是“圆”——圆滑乖巧、八面玲珑，有的人说是“方”——方正不阿、坚持原则。其实，偏重“圆”和偏重“方”都是不恰当的，“方”和“圆”乃是人相交的不可或缺，不可偏废的两大策略。\n\n　　先谈谈“圆”。[原文链接](http://www.DuanMeiWen.Com)\n\n　　一个恰如好处“行圆”的人，也就是在重要时候讲究变通灵活的人，其人际交往的回旋余地就大，其各方面成功的可能性就大。火车上，一个小伙躺在座位上。有一位母亲牵着儿子上车了，儿子摇着小伙子说：“叔叔，我要坐！”小伙装睡不加理睬。母亲婉转地对儿子说：“别吵叔叔，叔叔累了，他躺一会儿，会让给你坐的。”小伙听罢，忙起身红着脸说：“你们坐吧！”看来，这位母亲十分懂得交际之道。在当时，如果这位母亲指责小伙子的不是，其行为虽无可非议，但却有可能造成两者间紧张关系，于事无补。“行圆”，有它则会一帆风顺，无它则是逆水行舟。\n\n　　再说说“方”。\n\n　　历史上，忠尽耿耿的屈原、刚直无私的包拯、清正廉洁的海瑞、浩然正气的文天祥以及隐居深山不食周粟的伯夷、叔齐等等，都不失为“行方”的典型，也就因此，而流芳百世。如果一个方正不阿、坚持原则恰到好处，就会受到人们的钦佩、信任，由此带来一些意想不到的好效果。有位护士刚从校园毕业，在一家医院学习，其间若能让院方满意，便可获得一份正式工作，否则就得离开。一天，有位因车祸而生命垂危的病人需要手术，这位实习护士被安排作处科手术专家、院长亨利教授的助手。当手术将完，患者伤口即将缝合时，这位护士突然严肃地对院长说：“亨利教授，我们用了12块纱布，但是您只取出了11块。”院长不屑一顾地回答说：“我已经全部取出了，不要多说，立即缝合。”“不”，这位护士高声抗议道，“我们确实用了12块纱布。”院长对此不加理睬，命令道：“听我的，准备缝合。”这位实习护士听到后，几乎大叫起来：“你是医生，你不能这样做！”直到这时，院长冷漠的脸上才浮出一丝微笑。他举起手心里握着的每12块纱布，高声宣布道：“她是我最合格的助手。”不用说，这位实习护士理所当然地获得了这份工作。如果在当时，这位实习护士不会怎样呢？毋庸置疑她将会失去这份正式工作。这个实例说明了“行方”的好\n\n　　处。\n\n　　感悟精选（2）：\n\n　　处世之本话“方圆”\n\n　　“方”为做人之本。要求为人正直、诚实、谦逊、勤勉、质朴、守信、耐心、勇气、公正，对人要真诚、友善、宽容、乐于助人、善于分享。――真正卓越的人生，少不了正确的价值观，也就是品德。\n\n　　在所有成功的要素中，品德是成功之本。所以，一个人想要成功，他品质是最为关键的，因为人的品质决定人生成败！为人要低调，低调做人，能够在你周围持续健康的空气，构成一个良好的人际生态环境。\n\n　　“圆”为处世之道。要求做事讲究策略、方法、技巧和艺术性。要用心地与人进行良好的沟通，要善于与人相处与合作、要用心建立广泛的人脉、要求进行广泛的资源整合。\n\n　　做事要高调，高调做事，能够赢得用心的支持和声誉。\n\n　　在现实生活中我们常见一些八面玲珑，但心术不正的交际高手，由于缺少“方”之灵魂，他们最终将难以成功。但同时我们也经常看到不少做人十分本份，待人十分真诚的职场人士，由于缺少“圆”之艺术郁不得志，也很难获得成功。\n\n　　内方外圆的为人处世之道是一个人获得成功的一个重要因素。\n\n　　处世面子学：对待主子的亲人比亲人还亲。\n\n　　面子是地位和身份的象征，有面子的撑面子，没有面子充面子；自己要面子，也要给人以面子；要赏脸、捧场；会借光遮羞。\n\n　　处世隐忍学：做一个全职能的好部属。\n\n　　小不忍而乱大谋。韩信能忍胯下之辱，勾践能赏夫差之便，委曲求全，寻机潜龙腾空。祸福相依，见好就收。水至清则无鱼，人至察则无徒；得理饶人，韬光养晦，隐忍处世。\n\n　　处世识人学：识人、观人、御人求人，人尽其能\n\n　　认人，观人有绝招，一招更比一招妙；认人、观人有决窍，要看衣食住行和爱好；言为心声，眼为心窗，都是真人不露相。\n\n　　处世变通学：是奴才就要有奴才样，可主子离了我也玩不转。\n\n　　穷则变，变则通，通则久。规矩是死的，人是活的，具体问题具体分析，因人、因时、因地而异，不让条款害死人，大活人不能让尿憋死，话糟理不糟，以变应变，不拘定法，见招拆招。\n\n　　处世糊涂学：在同船共渡与党同伐异间寻求平衡。\n\n　　不要聪明反被聪明误。机关算尽太聪明，反算了卿卿性命；费尽心机，聪明反被聪明误。聪明难，糊涂更难，装聋作哑，招痴卖傻，大智若愚，大愚有智，以小糊涂换得大好处。\n\n　　处世中庸学：冷静周旋，把危机不见于无形之中。\n\n　　“厚”能摆正自己的位置，“黑”能在纷争的现实社会中立足。报朴守拙不偏不依为中庸，不急功近利，但是犹不及；无欲速，一无见小利，欲速则不达；既不功高盖主，也不让人小瞧。\n\n　　处世交际学：做一个一呼百应的人。\n\n　　适应社会也不失自我。处世交际的高妙在于心眼是否灵活，手段是否高妙，找对庙门走对路，好风借力，借梯登天，勤学蜘蛛织网，不能平时不烧香，临时抱佛脚。\n\n　　处世应酬学：收买人心方面，敢于不惜血本。\n\n　　见到先生说书，见到屠夫说猪。平时多烧香，用时不慌张，烧香有烧香的地方，烧香也要烧香的规矩。\n\n　　处世性别学：无善无不善，心理变化，皆循力学公例而行\n\n　　手指月，人能循着手看去就能够望见天空上之月；人能循着性格研究去，就能够窥见人性之真相。\n\n　　处世包装学：把自己装扮成可教之儒子。\n\n　　善于包装是智慧。把自己当成联合国大使来包装自己。\n\n　　感悟精选（3）：\n\n　　为人处世话方圆\n\n　　圆形象征着循环、永恒、完美、完整和力量；圆，代表着圆满、圆通与圆润。意味着自由和舒畅。如佛像头上或身上闪闪的光环，代表着佛的智慧与觉悟。又如佛教徒携带的圆润的念珠等，都是实践圆成佛道的资具，即法器。更如道教的太极图，圆内以S曲线分黑白环弧形，白中有一个小黑圆，黑中有一个小白圆。白为阳，黑为阴，象征阴阳互根。环弧形如两鱼交游状，以示阴阳变化循环不已。太极生两仪，两仪生四象，四象生八卦，八八六十四卦，乃至无穷。伏羲的先天八卦经周文王演《易》和孔子对《易经》的解读，以及后人不断地丰富与发展，构成了中华民族的文化。\n\n　　中国人做事爱讲究圆――圆活、圆通、圆顺、圆浑等。圆，意味着好、美、圆满、成熟、快乐，不缺失、很完美、很周全，方方面面都能照顾到。佛教认为圆，不偏倚，圆则通。《楞严经》中说“慧觉圆通，得无疑惑。”做人要圆活，做事要通理、合法。佛教认为人通佛法，也就通晓了活法。儒家将圆（即“○”）视为大道之体，大道之体即是仁爱、友善、宽恕、平和。“○”就是“0”，是开始，是所有一切进程数字的起点，饱含着无限的企盼与希冀。“0”是无，呈现出一种空无、虚无状态，这是佛陀极力推崇的人生理念。在0和空无中，生命能够对存在无碍地接纳。最主要的是“0”的谐音是灵，除表示灵活灵动外，还指向心灵和灵魂。它将我们引入高尚的精神生活境界。\n\n　　在当下社会，这个“0”被“8”极大地侵害和扭曲了（圆环可扭转成8）。因为8的谐音为发，贴合人们企盼发财的愿望。所以“8”字被许多人疯狂地追逐着，如出高价挑选内含88的电话号码和汽车牌号，出门远行要选内含8的日期或时间，结婚、签约、开业也选8号18号28号之类的吉日……。结果将“0”扭结成麻花状。如果人把自己扭结纠缠成麻花状，生命还能会舒展、畅快妈？\n\n　　圆，在人生各个年龄段里，孩子讲圆润、青年讲圆活、成年讲圆熟、老年讲圆通。但天有阴晴，月有圆缺，人有悲欢离合，谁也脱离不开自然的属性与规律。求圆只是一个完美的愿望。用我们儿时天真的眼光，来看今日难以忘怀的人和事，用青春不知圆为何物的心态，去体验被锐器刺痛内心的感受，慢慢就会觉悟到生命中有点遗憾，有点缺失，有点笨拙，有点疏忽，才会让自己比他人多一些选取，多一些自由，多一些强项。实际上，自然界那些有强大生命力的、鲜活跃动的、奇异蓬勃的、成功傲世的，往往不是圆的东西，而是尖锐的、粗狂的、忤逆的、乖张的……，无论是矿物、植物、动物、人物……。果实圆了也熟了，也该脱落了。我们总能在一个人身上，找到左伸右突的棱角，这些有尖角、有朝气、鬼点子多的人，往往比圆滑、老道、墨守成规的人更具有想象力，更惹人喜欢。这从这方面说是缺点，从那方面说恰恰是保鲜药、防腐剂和激活力，是优点。\n\n　　所以，在讲圆的同时，不能不讲方。方圆之道，自古至今都被视为生命之大道，做人之大智，做事之大端。\n\n　　方，如天安门广场托起圆球和圆柱的长方形花坛，像中山公园承载革命先驱孙中山脚步的方形花坛。方，是做人之本，是处事的原则与目标，是做人的正气与骨气，是人立身的脊梁和应有的品质。圆，是处世之道，是处事的手段与策略，是处世的成熟、老练与圆融。千百年来，“方圆有致”被公认为是最适合中国人做人、做事的成功心法，成大事者的奥秘正在于方与圆完美的结合，恰如古钱币，方外有圆，圆中有方，方圆相济，方圆合一；也即天地人三才合一。\n\n　　方圆之道是中国哲学和文化中所特有的概念；方圆之道是中国经典中的经典，哲学中的哲学，智慧中的智慧。孟子说：“规矩，方圆之至也。”黄炎培说：“和若春风，萧若秋霜。取象于钱，外圆内方。”方圆的世界，方圆的人生，方圆揭示了为人处世的高超艺术，是为人处世永恒的智慧。为人没有方，会被视作软弱可欺；做事不懂圆，会处处树敌，事事碰壁。尚若太过方正或太过圆滑，也会步履艰难甚至寸步难行。所以，做人做事该方则方，该圆则圆，做到方圆有度，恰到好处，并使之提升为自身内在的品质，才能圆润通达。\n\n　　人！只有运用好方圆之道，才能进退自若，所向披靡，无往而不胜。\n","slug":"bak/处世话方圆","published":1,"updated":"2018-11-16T13:03:39.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjok2nmqj000of0u78aoawrwn"}],"PostAsset":[],"PostCategory":[{"post_id":"cjok2nmp70000f0u7no4jyuvy","category_id":"cjok2nmpd0002f0u7vp99x96y","_id":"cjok2nmph0005f0u7j8niusd8"},{"post_id":"cjok2nmq90009f0u7hxy6d0ia","category_id":"cjok2nmpd0002f0u7vp99x96y","_id":"cjok2nmqe000gf0u7y8m0kfa8"},{"post_id":"cjok2nmqc000cf0u7kxveet45","category_id":"cjok2nmpd0002f0u7vp99x96y","_id":"cjok2nmqh000kf0u7fqjirlxf"},{"post_id":"cjok2nmqa000af0u78qftp176","category_id":"cjok2nmqd000df0u745ea6gdr","_id":"cjok2nmql000rf0u7l07faqks"},{"post_id":"cjok2nmqj000of0u78aoawrwn","category_id":"cjok2nmpd0002f0u7vp99x96y","_id":"cjok2nmqm000tf0u74j7tfue6"},{"post_id":"cjok2nmqd000ff0u70avcaxso","category_id":"cjok2nmqd000df0u745ea6gdr","_id":"cjok2nmqn000vf0u7vo1l86jj"},{"post_id":"cjok2nmqf000if0u7y39tnxws","category_id":"cjok2nmql000qf0u79k90zt08","_id":"cjok2nmqn000wf0u7fhyj1j7n"}],"PostTag":[{"post_id":"cjok2nmp70000f0u7no4jyuvy","tag_id":"cjok2nmpe0003f0u7qyowbe5c","_id":"cjok2nmpi0006f0u7lzh6kpp1"},{"post_id":"cjok2nmp70000f0u7no4jyuvy","tag_id":"cjok2nmpg0004f0u7ao11ebgl","_id":"cjok2nmpi0007f0u7f4hgkmvm"},{"post_id":"cjok2nmq90009f0u7hxy6d0ia","tag_id":"cjok2nmpe0003f0u7qyowbe5c","_id":"cjok2nmqb000bf0u7id5w2qhl"},{"post_id":"cjok2nmqc000cf0u7kxveet45","tag_id":"cjok2nmpe0003f0u7qyowbe5c","_id":"cjok2nmqf000hf0u7cu57uqg1"},{"post_id":"cjok2nmqa000af0u78qftp176","tag_id":"cjok2nmqd000ef0u7oa3s9p4l","_id":"cjok2nmqj000nf0u7ej6ke4mg"},{"post_id":"cjok2nmqa000af0u78qftp176","tag_id":"cjok2nmpg0004f0u7ao11ebgl","_id":"cjok2nmql000pf0u7hj06qn33"},{"post_id":"cjok2nmqd000ff0u70avcaxso","tag_id":"cjok2nmqd000ef0u7oa3s9p4l","_id":"cjok2nmqn000yf0u7vh97ulr9"},{"post_id":"cjok2nmqd000ff0u70avcaxso","tag_id":"cjok2nmql000sf0u7n06su230","_id":"cjok2nmqo000zf0u7h4d5wv8o"},{"post_id":"cjok2nmqd000ff0u70avcaxso","tag_id":"cjok2nmqm000uf0u74fytkzv5","_id":"cjok2nmqp0011f0u7p3aq4c6c"},{"post_id":"cjok2nmqd000ff0u70avcaxso","tag_id":"cjok2nmpg0004f0u7ao11ebgl","_id":"cjok2nmqp0012f0u72m9g80ap"},{"post_id":"cjok2nmqf000if0u7y39tnxws","tag_id":"cjok2nmqn000xf0u7dwzjq54b","_id":"cjok2nmqp0014f0u7obza14oj"},{"post_id":"cjok2nmqf000if0u7y39tnxws","tag_id":"cjok2nmpg0004f0u7ao11ebgl","_id":"cjok2nmqq0015f0u7018dqztb"},{"post_id":"cjok2nmqj000of0u78aoawrwn","tag_id":"cjok2nmqn000xf0u7dwzjq54b","_id":"cjok2nmqq0017f0u7jspkx7f1"},{"post_id":"cjok2nmqj000of0u78aoawrwn","tag_id":"cjok2nmqp0013f0u74p5cns0e","_id":"cjok2nmqq0018f0u7dt1o5dpi"},{"post_id":"cjok2nmqj000of0u78aoawrwn","tag_id":"cjok2nmqq0016f0u7iawrjyay","_id":"cjok2nmqr0019f0u71be0ggs2"}],"Tag":[{"name":"测试","_id":"cjok2nmpe0003f0u7qyowbe5c"},{"name":"文档","_id":"cjok2nmpg0004f0u7ao11ebgl"},{"name":"技术","_id":"cjok2nmqd000ef0u7oa3s9p4l"},{"name":"ansible","_id":"cjok2nmql000sf0u7n06su230"},{"name":"自动化","_id":"cjok2nmqm000uf0u74fytkzv5"},{"name":"摘抄","_id":"cjok2nmqn000xf0u7dwzjq54b"},{"name":"心情","_id":"cjok2nmqp0013f0u74p5cns0e"},{"name":"美文","_id":"cjok2nmqq0016f0u7iawrjyay"}]}}